/*
 * JDLG_CancelacionFactura.java
 *
 * Created on 9 de enero de 2009, 06:57 PM
 */

package tmsfacturarcodigobarras;

import java.util.Vector;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.swing.JOptionPane;
import solicitud.FacturaTMSREPCONTROLBeanRemote;
import solicitud.TmsSesionBeanFacturarRemote;

/**
 *
 * @author  asolis
 */
public class JDLG_CancelacionFactura extends javax.swing.JDialog {
    Context cont = null;
    //TmsSesionBeanFacturarRemote cosa = null;
    FacturaTMSREPCONTROLBeanRemote RepControlFacade = null;
    String dblink = "";
    String usuario = "";
  
    String Prefijo="";
    String TerminalFact="";
    /**
     * Creates new form JDLG_CancelacionFactura
     */
    public JDLG_CancelacionFactura(java.awt.Frame parent, String dblink, String usuario, String Prefijo,String TerminalFact,FacturaTMSREPCONTROLBeanRemote pRepControlFacade  ) {
        super(parent);
        initComponents();
        this.RepControlFacade = pRepControlFacade;
        /*
         try {
            cont = new InitialContext(System.getProperties());
            cosa = (TmsSesionBeanFacturarRemote) cont.lookup(TmsSesionBeanFacturarRemote.class.getName());
            //System.out.println(cosa + " "+cont);
        } catch (NamingException ex) {
            ex.printStackTrace();
        }*/
        this.dblink = dblink;
        this.usuario = usuario;
        this.Prefijo=Prefijo;
        this.TerminalFact = TerminalFact;
        jlbl_barraEstado.setText("<html>  <font color=FF0000>   ESC</font> Salir de Facturar Boleto | <font color=FF0000> ENTER </font> Cancelar Factura </html>");
      
        /*setSize(480,100);
        setVisible(true);  */
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jlbl_factura = new javax.swing.JLabel();
        jlbl_barraEstado = new javax.swing.JLabel();
        jtxt_factura = new tms_TextFields.JTextTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Cancelar Facturas");
        setModal(true);
        setResizable(false);
        jlbl_factura.setText("Folio de Factura: ");

        jtxt_factura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxt_facturaKeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jlbl_barraEstado, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jlbl_factura)
                .add(23, 23, 23)
                .add(jtxt_factura, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 254, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jlbl_factura)
                    .add(jtxt_factura, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(29, 29, 29)
                .add(jlbl_barraEstado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxt_facturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxt_facturaKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
                String respuesta = null;  
                String Foliofactura="";
                if(jtxt_factura.getText().trim().length() <= 0)
                {JOptionPane.showMessageDialog( this, "Escriba el número de factura",
                        "TMS - Facturar Boleto", JOptionPane.WARNING_MESSAGE );
                 return;
                }

                /*
                String  FactCancelar="APROBADA";
                Foliofactura= this.Prefijo+this.TerminalFact+jtxt_factura.getText().trim();
                 
               System.out.println("Factura a cancelar "+Foliofactura );
               
               String LlaveFact=cosa.getLlaveFactura(Foliofactura);
               
               if (LlaveFact == null)
               {
                 JOptionPane.showMessageDialog( this, "La factura "+jtxt_factura.getText().trim()+" no se encuentra en el sistema o ya ha sido cancelada",
                                "TMS - Facturar Boleto", JOptionPane.ERROR_MESSAGE ); 
                return;
               }
               
                System.out.println("Factura a LlaveFact "+LlaveFact );
             
                    FacturaElectronica FactElec = new FacturaElectronica(LlaveFact, cosa, null, "Cancelar factura" );
                    FactCancelar=FactElec.ResultCanFacElect;
               
                
                 if (FactCancelar != null && FactCancelar.equalsIgnoreCase("APROBADA"))
                   
                 {    
                        respuesta = cosa.eliminarBoletosFacturados (Foliofactura,dblink, usuario);
                        System.out.println("eliminarBoletosFacturados "+respuesta);
                        if(respuesta.equals("Todo bien")){
                            JOptionPane.showMessageDialog( this, "La Factura "+jtxt_factura.getText().trim()+ " se ha Cancelado Correctamente",
                                "TMS - Facturar Boleto", JOptionPane.INFORMATION_MESSAGE );
                            jtxt_factura.setText("");
                        }else{
                            if(respuesta.equals("No existe")){
                                JOptionPane.showMessageDialog( this, "La factura "+jtxt_factura.getText().trim()+" no se encuentra en el sistema o ya ha sido cancelada",
                                "TMS - Facturar Boleto", JOptionPane.ERROR_MESSAGE );
                                jtxt_factura.setText("");
                            }
                            if(respuesta.equals("Algo no salio bien")) {
                                JOptionPane.showMessageDialog( this, "En este momento no se puede cancelar la factura. Intente mas tarde",
                                "TMS - Facturar Boleto", JOptionPane.ERROR_MESSAGE );
                                jtxt_factura.setText("");
                            }                   
                        }
                }  // IF a cancelar
                 else
                 {
                               JOptionPane.showMessageDialog( this, "La Factura no pudo ser cancelada.",
                                "TMS - Facturar Boleto", JOptionPane.ERROR_MESSAGE );
                                jtxt_factura.setText("");
                 }
              */
           Vector resp=RepControlFacade.buscarDatosFacCan(jtxt_factura.getText().trim());
           if(resp==null)
           {
            JOptionPane.showMessageDialog( this, "La factura "+jtxt_factura.getText().trim()+" no se encuentra en el sistema o ya ha sido cancelada",
            "TMS - Facturar Boleto", JOptionPane.ERROR_MESSAGE );
            jtxt_factura.setText("");
            return;
           }

           String P_PARAMETROS_PRODUCTOS =""+("^|BOLETO|"+RepControlFacade.boletosFolCanFact(resp.get(0).toString()).replace(",", "^|BOLETO|"));
           String P_PARAMETROS_FACTURA="|"+resp.get(0).toString()+"|"+resp.get(1).toString()+"|TMS|"+resp.get(2).toString().replace("|","~")+
                             "|Por solicitud del cliente"+
                             "|" +("1000"+usuario)+
                             "|"+TerminalFact+
                             "|";
               Vector VResultFacElect=RepControlFacade.cancelarFactura(P_PARAMETROS_FACTURA, P_PARAMETROS_PRODUCTOS,"C","MOS",-1,Float.valueOf(resp.get(3).toString()),("1000"+usuario));
            if (VResultFacElect!=null && VResultFacElect.get(0).toString().equals("TRUE"))
                 JOptionPane.showMessageDialog(this, "La factura "+jtxt_factura.getText()+" se canceló correctamente","Factura cancelada",JOptionPane.INFORMATION_MESSAGE);
            else
            {
                   JOptionPane.showMessageDialog(this,"La factura "+jtxt_factura.getText()+" No pudo ser cancelada.\n"+ VResultFacElect.get(1).toString(),"Factura no cancelada",JOptionPane.ERROR_MESSAGE);
                   return;
            }
        }
         if(evt.getKeyCode() == evt.VK_ESCAPE) {
            /*int result = JOptionPane.showOptionDialog(this, "¿Desea cerrar Cancelar Facturas?",
                    "TMS-Cancelar Facturas", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if(result == JOptionPane.YES_OPTION)*/
                this.dispose();
        }
                
    }//GEN-LAST:event_jtxt_facturaKeyPressed
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jlbl_barraEstado;
    private javax.swing.JLabel jlbl_factura;
    private tms_TextFields.JTextTextField jtxt_factura;
    // End of variables declaration//GEN-END:variables
    
}
