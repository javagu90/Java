/*
 * JDlgGeneracionAuto.java
 *
 * Created on 9 de octubre de 2007, 06:15 PM
 */

package tms_corridaextra;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import tms_TextFields.JHourTextField;
import tms_psd.*;
import tms_psd.util.JDlgAceptar;
import tms_psd.util.JNumberTextFieldMaxDig;

/**
 *
 * @author  ocruz
 */
public class JDlgGeneracionAuto extends javax.swing.JDialog implements KeyListener{
    
    /** Creates new form JDlgGeneracionAuto */
    public JDlgGeneracionAuto(Timestamp pHoraDesde) {
        this.setModal(true);
        this.HoraDesde = new Timestamp(pHoraDesde.getTime());
        initComponents();
        centrarJDialog();
    }
    
    private void inhabilitarF10() {
        this.jTxtHasta.registerKeyboardAction(new ActionListener() { 
        public void actionPerformed(ActionEvent e) { ; }}, KeyStroke.getKeyStroke(KeyEvent.VK_F10, 0), JComponent.WHEN_FOCUSED);
        this.jTxtFrecuencia.registerKeyboardAction(new ActionListener() { 
        public void actionPerformed(ActionEvent e) { ; }}, KeyStroke.getKeyStroke(KeyEvent.VK_F10, 0), JComponent.WHEN_FOCUSED);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTxtDesde = new javax.swing.JTextField();
        jTxtHasta = new JHourTextField();
        jLabel5 = new javax.swing.JLabel();
        jTxtFrecuencia = new JNumberTextFieldMaxDig(4);
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(" Generacion Automatica de Corridas Extra");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.addKeyListener(this);
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel2.setText("Hora inicial:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel3.setText("Fecuencia de salida (minutos):");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel4.setText("Hora final:");

        jTxtDesde.setEditable(false);
        jTxtDesde.setFont(new java.awt.Font("Tahoma", 1, 11));
        jTxtDesde.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTxtDesde.setName("0");
        jTxtDesde.setFocusTraversalKeysEnabled(false);

        jTxtHasta.setFont(new java.awt.Font("Tahoma", 1, 11));
        jTxtHasta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTxtHasta.setName("1");
        jTxtHasta.setFocusTraversalKeysEnabled(false);
        jTxtHasta.addKeyListener(this);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel5.setText("<html><font color=ff0000>ENTER</font> Generar Corridas | <font color=ff0000>F1</font> Aceptar | <font color=ff0000>ESC</font> Cancelar</html>");

        jTxtFrecuencia.setFont(new java.awt.Font("Tahoma", 1, 11));
        jTxtFrecuencia.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTxtFrecuencia.setText("10");
        jTxtFrecuencia.setName("2");
        jTxtFrecuencia.setFocusTraversalKeysEnabled(false);
        jTxtFrecuencia.addKeyListener(this);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Detalles");
        jLabel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel6.setName("3");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTxtDesde, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(15, 15, 15)
                        .add(jLabel4))
                    .add(jLabel3))
                .add(12, 12, 12)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jTxtFrecuencia, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .add(jTxtHasta, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE))
                .addContainerGap())
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jLabel4)
                    .add(jTxtHasta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTxtDesde, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTxtFrecuencia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel5))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
// TODO add your handling code here:
        jTxtDesde.setText(formatoHora.format(HoraDesde));
        jTxtHasta.requestFocusInWindow();
    }//GEN-LAST:event_formComponentShown

    private void centrarJDialog(){
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = this.getSize();
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        this.setLocation( ( screenSize.width - frameSize.width ) / 2, ( screenSize.height - frameSize.height ) / 2 );
    }
    
    public void keyTyped(KeyEvent e) {
    }

    public void keyPressed(KeyEvent e) {
        if(e.getComponent().getName()==null) return;
        int nCompo = Integer.valueOf(e.getComponent().getName());
        switch(e.getKeyCode()){
            case KeyEvent.VK_UP: case KeyEvent.VK_DOWN:
                switch(nCompo){
                    case 1: jTxtFrecuencia.selectAll(); this.jTxtFrecuencia.requestFocusInWindow();  break;
                    case 2: jTxtHasta.selectAll(); this.jTxtHasta.requestFocusInWindow(); break;
                }
                break;
            case KeyEvent.VK_F1:
                if(salidas>-1){
                    this.dispose();
                    return;
                }
                DialogoAceptar = new JDlgAceptar("¡No ha realizado un calculo valido!","Presione ENTER para continuar...", Color.RED);
                jTxtHasta.selectAll();
                jTxtHasta.requestFocusInWindow();
                break;
            case KeyEvent.VK_ESCAPE:
                this.salidas = -1;
                this.dispose();
                break;
            case KeyEvent.VK_ENTER:
                if(jTxtHasta.getText().equals("")){
                    DialogoAceptar = new JDlgAceptar("¡Ingrese hora!","Presione ENTER para continuar...", Color.RED);
                    jTxtHasta.selectAll();
                    jTxtHasta.requestFocusInWindow();
                    return;
                }
                if(jTxtFrecuencia.getText().equals("")){
                    DialogoAceptar = new JDlgAceptar("¡Ingrese frecuencia!","Presione ENTER para continuar...", Color.RED);
                    jTxtFrecuencia.selectAll();
                    jTxtFrecuencia.requestFocusInWindow();
                    return;
                }
                Frecuencia = Integer.valueOf(jTxtFrecuencia.getText());
                if(Frecuencia>1440){
                    DialogoAceptar = new JDlgAceptar("¡Frecuencia fuera de rango!","<html>Valor maximo 1440 minutos.<br>Presione ENTER para continuar...</html>", Color.RED);
                    jTxtFrecuencia.selectAll();
                    jTxtFrecuencia.requestFocusInWindow();
                    return;
                }
                try {
                    horaHasta = new Timestamp(formatoHora.parse(jTxtHasta.getText()).getTime());
                } catch (ParseException ex) {
                    DialogoAceptar = new JDlgAceptar("¡El valor del campo hora es incorrecto!","Presione ENTER para continuar...", Color.RED);
                    jTxtHasta.selectAll();
                    jTxtHasta.requestFocusInWindow();
                    return;
                }
                if(!ValidarHora(horaHasta)){                    
                    jLabel6.setText("Detalles");
                    salidas=-1;
                    return;
                }
                // INFORME
                if(minutos<60)
                    jLabel6.setText("<html><font color=ff0000>"+salidas+"</font> salidas calculadas<br>para un tiempo de <font color=ff0000>"+
                        minutos+"</font> "+(minutos==1 ? "minuto" : "minutos")+"</html>");
                else{
                    float hora = minutos/60;
                    jLabel6.setText("<html><font color=ff0000>"+salidas+"</font> salidas calculadas<br>para un tiempo de <font color=ff0000>"+
                        roundNum(hora,2)+"</font> "+(hora==1 ? "hora" : "horas")+"</html>");
                }       
                break;
        }
    }

    public void keyReleased(KeyEvent e) {
    }
    
    public float roundNum(float num, int ndec){
        float valor = 0;
        valor = num;
        valor = valor*ndec;
        valor = Math.round(valor);
        valor = valor/ndec;
        return valor;
    }

    private boolean ValidarHora(Timestamp hora){
        if(this.HoraDesde.getTime()>=hora.getTime()){
            DialogoAceptar = new JDlgAceptar("¡Hora final incorrecta!","<html><font color=ff0000>Hora final</font> debe ser mayor que <font color=ff0000>hora inicial</font>.</html>", Color.RED);
            jTxtHasta.setText("");
            jTxtHasta.selectAll();
            jTxtHasta.requestFocusInWindow();
            return false;
        }
        
        if(Frecuencia==0){
            DialogoAceptar = new JDlgAceptar("¡Frecuencia incorrecta!","<html>La <font color=ff0000>frecuencia</font> no debe ser 0.</html>", Color.RED);
            jTxtFrecuencia.setText("");
            jTxtFrecuencia.selectAll();
            jTxtFrecuencia.requestFocusInWindow();
            return false;
        }
        
        minutos = (hora.getTime()-this.HoraDesde.getTime())/60000;
        if(minutos<Frecuencia){
            DialogoAceptar = new JDlgAceptar("¡Frecuencia incorrecta!","<html>La <font color=ff0000>frecuencia</font> debe ser menor o igual <br>que la diferencia entre hora inicial y final.</html>", Color.RED);
            jTxtFrecuencia.setText("");
            jTxtFrecuencia.selectAll();
            jTxtFrecuencia.requestFocusInWindow();
            return false;
        }
        salidas = (int)(minutos / Frecuencia)+1;
        return true;
    }
    
    public int getSalidas(){ return salidas; }
    
    public long getFrecuencia(){ return Frecuencia*60000; }
    
    public Timestamp getHoraFinal(){ return horaHasta; } 

    public String getStrHoraFinal(){ return jTxtHasta.getText(); } 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTxtDesde;
    private javax.swing.JTextField jTxtFrecuencia;
    private javax.swing.JTextField jTxtHasta;
    // End of variables declaration//GEN-END:variables
    private SimpleDateFormat formatoHora= new SimpleDateFormat("HH:mm");
    private Timestamp HoraDesde;

    private JDlgAceptar DialogoAceptar;
    private int salidas=-1;
    private int Frecuencia;
    private float minutos;
    private Timestamp horaHasta = null;
}
