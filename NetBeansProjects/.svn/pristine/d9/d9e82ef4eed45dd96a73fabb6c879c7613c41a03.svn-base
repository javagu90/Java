/*
 * JDlgAcumulaEstrellas.java
 *
 * Created on 29 de diciembre de 2009, 12:31 PM
 */

package DialogosX;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Timestamp;
import java.util.List;
import java.util.Vector;
import subProcesos.JTextCardField;
import tms_venta.JClsColoresInterfaz;
import tms_venta.SesionVenta;
import tms_venta.entidad.TmsTiposPasajeroTbl;
import xer_emv_dll.JClsPinPadTBRequest;
import xer_emv_dll.JClsPinPadTBResponse;
import xer_emv_dll.JDlgBProgresoLealtadReden;
import xer_emv_dll.JObsBProgreso;
import xer_emv_dll.SwingWorker;

/**
 *
 * @author  vgonzalez
 */
public class JDlgRedimir extends javax.swing.JDialog {
    private Object[][] Boletos;
    private Object[][] BoletosTabla;
    private boolean completado = true;
    private Dimension screenSize;
    private JClsColoresInterfaz ColoresInterfaz = new JClsColoresInterfaz();
    private JDlgBProgresoLealtadReden jProgreso = null;
    private boolean activoF1 = false;
    private int enProceso;
    private SwingWorker worker = null;
    private SesionVenta sesionVenta;
    private String referencia;
    private String Amount;
    private String AMEXP = "";
    private JClsPinPadTBResponse jClsPinPadTBResponse;
    private JClsPinPadTBRequest jClsPinPadTBRequest;
    private JDlgAceptar DialogoAceptar = new JDlgAceptar();
    private JDlgSiNo DialogoSiNo = null;
    private boolean success;
    private List<TmsTiposPasajeroTbl> listado;
    private Vector registros = null;
    private boolean cerrar = false;
    private String tarjeta = "";
    
    /** Creates new form JDlgAcumulaEstrellas */
    public JDlgRedimir(javax.swing.JDialog parent, boolean modal, Object[][] pboletos, SesionVenta psesionVenta,List<TmsTiposPasajeroTbl> plistado, String preferencia,String pdiaVenta, String pdiaCorrida, boolean pide) {
        super(parent, modal);
        this.setTitle("TMS Venta. Redención de Estrellas");
        this.sesionVenta = psesionVenta;
        this.listado = plistado;
        this.referencia = preferencia+"2";
        //this.diaCorrida = pdiaCorrida;
        this.Boletos = pboletos;
        String fechaArreglo[] = Boletos[0][26].toString().split("/");
        Timestamp f = null;
        f = Timestamp.valueOf(""+fechaArreglo[2]+"-"+fechaArreglo[1]+"-"+fechaArreglo[0]+" 00:00:00");
        this.jClsPinPadTBRequest = new JClsPinPadTBRequest();
        this.jClsPinPadTBResponse = new JClsPinPadTBResponse();
        initComponents();
        jLblBarraEstado.setBackground(ColoresInterfaz.cFondoPieEncabezado);
        jLblBarraEstado.setForeground(ColoresInterfaz.cTextoAyuda1);
        jLblBarraEstado.setFont(ColoresInterfaz.fuente3);
        //jLblBarraEstado.setText("<html> <font color="+ColoresInterfaz.cHTML3+">F1</font> Leer Tarjeta|  <font color="+ColoresInterfaz.cHTML3+">ESC</font> Salir sin leer tarjeta</html>");
        this.setCompletado(false);
        //this.setVisible(true);
        centrarJDialog();
        jLabel1.setVisible(false);
        jtxt_numTarjeta.setVisible(false);
        if(!pide)
            jLblBarraEstado.setText("<html><font color=ff0000>Deslice la Tarjeta</font> <font color="+ColoresInterfaz.cHTML3+">o presione la Tecla <font color=ff0000>CAN</font> de PinPad</font> para Cancelar Lectura</html>");        
        else
            jLblBarraEstado.setText("<html> <font color="+ColoresInterfaz.cHTML3+">F1</font> Leer Tarjeta|  <font color="+ColoresInterfaz.cHTML3+">F2</font> Teclear Num Tarjeta|  <font color="+ColoresInterfaz.cHTML3+">ESC</font> Salir de Tipo de Pago</html>");            
        jLblBarraEstado.requestFocus();
    }
    
    
    
    
    private void centrarJDialog(){
        screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        //this.setSize(screenSize.width-24, screenSize.height-66);
        Dimension frameSize = this.getSize();
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        this.setLocation( ( screenSize.width - frameSize.width ) / 2, (( screenSize.height - frameSize.height ) / 2)+22);
    }    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLblBarraEstado = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jtxt_numTarjeta = new javax.swing.JTextField();
        jtxt_numTarjeta = new JTextCardField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jLblBarraEstado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLblBarraEstadoKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Num. Tarjeta:");

        jtxt_numTarjeta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxt_numTarjetaFocusGained(evt);
            }
        });
        jtxt_numTarjeta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxt_numTarjetaKeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLblBarraEstado, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jtxt_numTarjeta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 179, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(232, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(68, 68, 68)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jtxt_numTarjeta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 82, Short.MAX_VALUE)
                .add(jLblBarraEstado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxt_numTarjetaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxt_numTarjetaKeyPressed
        if(evt.getKeyCode() == 10)
        {
            registros = new Vector();
            if(jtxt_numTarjeta.getText().trim().length() < 7)
            {
                JDlgAceptar DialogoAceptar = new JDlgAceptar();
                DialogoAceptar.mostrarDialogo("TMS Venta.", "Introduce un N\372mero de Tarjeta V\341lido.", Color.RED);
                return;
            }
            System.out.println("Entra en modo Moto para lealtad....");
            for(int i = 0; i < Boletos.length; i++)
            {
                long tipoId = -1L;
                for(int j = 0; j < listado.size(); j++)
                    if(Boletos[i][2].toString().trim().equals(((TmsTiposPasajeroTbl)listado.get(j)).getLetraTipo()))
                        tipoId = ((TmsTiposPasajeroTbl)listado.get(j)).getTipoPasajeroId().longValue();
                    String origen  = "";
                    String destino = "";
                    if(Boletos[i][31].toString().equals("R"))
                    {
                        if(Boletos[i][21].toString().equals(sesionVenta.getTerminalLealtadNombreO()))
                        {
                         origen  = ""+sesionVenta.getTerminalLealtadIdO();
                         destino = ""+sesionVenta.getTerminalLealtadIdD();
                        }
                        else
                        {
                         destino = ""+sesionVenta.getTerminalLealtadIdO();
                         origen  = ""+sesionVenta.getTerminalLealtadIdD();
                        }

                    }
                    else
                    {
                         origen  = ""+sesionVenta.getTerminalLealtadIdO();
                         destino = ""+sesionVenta.getTerminalLealtadIdD();
                    }
                String producto = (new StringBuilder()).append(sesionVenta.getEmpresaId(Boletos[i][7].toString())).append("").append(sesionVenta.getServicioId(Boletos[i][8].toString())).append("").append(origen).append("").append(destino).append("").append(tipoId).toString();
//                String producto = (new StringBuilder()).append(sesionVenta.getEmpresaId(Boletos[i][7].toString())).append("").append(sesionVenta.getServicioId(Boletos[i][8].toString())).append("").append(sesionVenta.getTerminalLealtadId(Boletos[i][21].toString())).append("").append(sesionVenta.getTerminalLealtadId(Boletos[i][22].toString())).append("").append(tipoId).toString();
                if(Boletos[i][31].equals("R"))
                    producto = (new StringBuilder()).append(producto).append("1").toString();
                else
                    producto = (new StringBuilder()).append(producto).append("0").toString();
                System.out.println((new StringBuilder()).append("producto(").append(i).append(") = ").append(producto).toString());
                Vector vec = new Vector();
                vec.add(Integer.valueOf(i));
                vec.add(producto);
                vec.add(jtxt_numTarjeta.getText().trim());
                vec.add(referencia);
                String unidad = "";
                if(Boletos[i][7].equals("Terminal Las Torres Puebla") || Boletos[i][7].equals("Autobuses Unidos"))
                    unidad = "TP";
                else
                if(Boletos[i][7].equals("Contactos Terrestres") || Boletos[i][7].equals("Contactos Terrestres 1"))
                    unidad = "CT";
                else
                    unidad = "AM";
                vec.add(unidad);
                registros.add(vec);
                setTarjeta(jtxt_numTarjeta.getText().trim());
            }

            setCompletado(true);
            cerrarVentana();
        }
        if(evt.getKeyCode() == 27)
        {
            jLabel1.setVisible(false);
            jtxt_numTarjeta.setVisible(false);
            JClsColoresInterfaz _tmp = ColoresInterfaz;
            JClsColoresInterfaz _tmp1 = ColoresInterfaz;
            JClsColoresInterfaz _tmp2 = ColoresInterfaz;
            jLblBarraEstado.setText((new StringBuilder()).append("<html> <font color=").append("003399").append(">F1</font> Leer Tarjeta|  <font color=").append("003399").append(">F2</font> Teclear Num Tarjeta|  <font color=").append("003399").append(">ESC</font> Salir de Tipo de Pago</html>").toString());
            jLblBarraEstado.requestFocus();
        }
    }//GEN-LAST:event_jtxt_numTarjetaKeyPressed

    private void jtxt_numTarjetaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxt_numTarjetaFocusGained
            jLabel1.setVisible(true);
            jtxt_numTarjeta.setVisible(true);     
            jLblBarraEstado.setText("<html> <font color="+ColoresInterfaz.cHTML3+">Enter</font> Aceptar|  <font color="+ColoresInterfaz.cHTML3+">ESC</font> Salir del modo teclear tarjeta</html>");
            jtxt_numTarjeta.requestFocus();
    }//GEN-LAST:event_jtxt_numTarjetaFocusGained

    private void jLblBarraEstadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLblBarraEstadoKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_F1){
            this.pedirTarjeta();
            jLblBarraEstado.setText("<html><font color=ff0000>Deslice la Tarjeta</font> <font color="+ColoresInterfaz.cHTML3+">o presione la Tecla <font color=ff0000>CAN</font> de PinPad</font> para Cancelar Lectura</html>");
        }
                
        if(evt.getKeyCode() == KeyEvent.VK_ESCAPE ){
            System.out.println("Se cancelo la operacion desde ESCAPE");
            setCompletado(false);  
            cerrarVentana();
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_F2){
            jLabel1.setVisible(true);
            jtxt_numTarjeta.setVisible(true);
            jtxt_numTarjeta.requestFocus();        
        }
            
    }//GEN-LAST:event_jLblBarraEstadoKeyPressed
    
    
//                if(!activoF1)
//                {
//                System.out.println("Activa el F1");
//                activoF1 = true;
//                //if(!realizaOperacion(_VD)) return;
//                //this.jLblTitulo.setText("VENTA DIRECTA "+importe);
//                //agregarPanel(jPnlVD);
//                this.enProceso = 1;
//                //jLblBarraEstado.setText("<html><font color="+ColoresInterfaz.cHTML3+">Tecla <font color=ff0000>CAN</font> de PinPad</font> Cancelar Lectura</html>");
//                jProgreso = new JDlgBProgresoLealtad(new JObsBProgreso(0, 1000),this);
//                if(worker!=null) worker = null;
//                this.setRespondio(false);
//                worker = new SwingWorker() {
//                    public Object construct() {
//                        //try {sesionVenta.TextOut = new FileWriter(sesionVenta.TextFile, true);} catch (IOException ex) {ex.printStackTrace();}
//                        System.out.println("LECTURA DE TARJETA DE LEALTAD: referencia = "+referencia);
//                       // try{sesionVenta.TextOut.write(sesionVenta.formatoFechaHoraBD.format(new Date())+" COBRO VENTA: "+sesionVenta.getUserCon().getCc_Type()+" - "+sesionVenta.getUserCon().getTx_MerchantP()+" - "+referencia+" - "+sesionVenta.getUserCon().getTx_OperationTypeP()+"\n");} catch (IOException ex) {ex.printStackTrace();}
//                        //try{sesionVenta.TextOut.close();} catch (IOException ex) {ex.printStackTrace();}
//                        jClsPinPadTBResponse=jClsPinPadTBRequest.getLealtad(sesionVenta.getUserCon().getDbgSetUrl(),Amount,sesionVenta.getUserCon().getBs_User(),
//                                                                                 sesionVenta.getUserCon().getBs_Pwd(),sesionVenta.getUserCon().getUsuarioNum(),
//                                                                                 sesionVenta.getUserCon().getBs_Company(),sesionVenta.getUserCon().getBs_Branch(),
//                                                                                 sesionVenta.getUserCon().getBs_Country(), sesionVenta.getUserCon().getCc_Type(),
//                                                                                 sesionVenta.getUserCon().getTx_MerchantP(),referencia,sesionVenta.getUserCon().getTx_OperationTypeP(),
//                                                                                 sesionVenta.getUserCon().getTx_Currency(),AMEXP);
//                        System.out.println("SALI DE FUNCION NATIVA");
//                        detenerProgreso();
//                        setRespondio(true);
//                        //mostrarResultado(true);
//                        System.out.println("jClsPinPadTBResponse.getRspDsError(): "+jClsPinPadTBResponse.getRspDsError());
//                        System.out.println("jClsPinPadTBResponse.getCc_Name(): "+jClsPinPadTBResponse.getCc_Name());
//                        System.out.println("jClsPinPadTBResponse.getCc_Number(): "+jClsPinPadTBResponse.getCc_Number());
//                        //imprimirCamposResultado();
//                        limpiaProgreso();
//                        System.out.println("Desactiva el F1 (Dentro del hilo)");
//                        activoF1 = false;
//                        System.out.println("antes de verificar jClsPinPadTBResponse.getCc_Name(): "+jClsPinPadTBResponse.getCc_Name());
//                        if(jClsPinPadTBResponse.getCc_Name()!=null)
//                        {
//                            registros = new Vector();
//                            if(jClsPinPadTBResponse.getCc_Name().trim().equals(""))
//                            {
//                                System.out.println("Se cancelo la operacion desde el Pinpad");
//                                limpiaProgreso();
//                            }    
//                            else
//                            {
//                             for(int i=0; i<jtbl_boletos.getRowCount();i++)
//                             {
//                                 
//                                if(jtbl_boletos.getValueAt(i,3).toString().equals("APLICA")) 
//                                {
//                                    //System.out.println("jtbl_boletos.getValueAt("+i+",3) = "+jtbl_boletos.getValueAt(i,3));
//                                    long tipoId = -1;
//                                    for(int j=0; j<listado.size(); j++)
//                                    {
//                                      //  System.out.println("jtbl_boletos.getValueAt("+i+",1) = "+jtbl_boletos.getValueAt(i,1)+" ==> ("+j+")"+listado.get(j).getLetraTipo());
//                                        if(jtbl_boletos.getValueAt(i,1).toString().trim().equals(listado.get(j).getLetraTipo()))
//                                            tipoId = listado.get(j).getTipoPasajeroId();
//                                    }
//                                    String producto = sesionVenta.getEmpresaId(Boletos[i][7].toString())+"" +
//                                            sesionVenta.getServicioId(Boletos[i][8].toString())+ "" +
//                                            sesionVenta.getTerminalLealtadId(Boletos[i][21].toString())+"" +
//                                            sesionVenta.getTerminalLealtadId(Boletos[i][22].toString())+"" + tipoId;
//                                    if(Boletos[i][31].equals("R")) producto = producto+"1";else producto = producto+"0";
//                                    System.out.println("producto("+i+") = "+producto);
//                                    Vector vec = new Vector();
//                                    vec.add(i);
//                                    vec.add(producto);
//                                    vec.add(jClsPinPadTBResponse.getCc_Name().trim());
//                                    vec.add(referencia);
//                                    String unidad = "";
//                                    if(Boletos[i][7].equals("Terminal Las Torres Puebla") || Boletos[i][7].equals("Autobuses Unidos"))
//                                        unidad = "TP";
//                                    else
//                                    {
//                                        if(Boletos[i][7].equals("Contactos Terrestres") || Boletos[i][7].equals("Contactos Terrestres 1"))
//                                            unidad = "CT";
//                                        else
//                                            unidad = "AM";
//                                    }
//                                    vec.add(unidad);
//                                    registros.add(vec);
//                                    Boletos[i][33] =referencia;
//                                    Boletos[i][34] =jClsPinPadTBResponse.getCc_Name();
//                                    
//                                    
//                                } 
//                             }
//                             setCompletado(true);
//                             cerrarVentana();
//                            }//else se cancelo por el pinpad
//                        }                        
//                        return jClsPinPadTBResponse;
//                    }
//                };
//
//                 //System.out.println("Desactiva el F1");
//                 //activoF1 = false;
//                }
    
    public void hablilitarCampo(){
            jLblBarraEstado.setText("<html> <font color="+ColoresInterfaz.cHTML3+">F1</font> Leer Tarjeta|  <font color="+ColoresInterfaz.cHTML3+">F2</font> Teclear Num Tarjeta|  <font color="+ColoresInterfaz.cHTML3+">ESC</font> Salir de Tipo de Pago</html>");
            
    }
    
    public void pedirTarjeta(){

                        jProgreso = new JDlgBProgresoLealtadReden(new JObsBProgreso(0, 1000),this);
                        SwingWorker worker = null;
                        if(worker!=null) worker = null;
                        this.setRespondio(false);
                        worker = new SwingWorker() {
                            public Object construct() {
                                //try {sesionVenta.TextOut = new FileWriter(sesionVenta.TextFile, true);} catch (IOException ex) {ex.printStackTrace();}
                                System.out.println("LECTURA DE TARJETA DE LEALTAD(Redencion): referencia = "+referencia);
                               // try{sesionVenta.TextOut.write(sesionVenta.formatoFechaHoraBD.format(new Date())+" COBRO VENTA: "+sesionVenta.getUserCon().getCc_Type()+" - "+sesionVenta.getUserCon().getTx_MerchantP()+" - "+referencia+" - "+sesionVenta.getUserCon().getTx_OperationTypeP()+"\n");} catch (IOException ex) {ex.printStackTrace();}
                                //try{sesionVenta.TextOut.close();} catch (IOException ex) {ex.printStackTrace();}
                                jClsPinPadTBResponse = new JClsPinPadTBResponse();
                                JClsPinPadTBRequest jClsPinPadTBRequest = new JClsPinPadTBRequest();
                                jClsPinPadTBResponse=jClsPinPadTBRequest.getLealtad(sesionVenta.getUserCon().getDbgSetUrl(),"0",sesionVenta.getUserCon().getBs_User(),
                                                                                         sesionVenta.getUserCon().getBs_Pwd(),sesionVenta.getUserCon().getUsuarioNum(),
                                                                                         sesionVenta.getUserCon().getBs_Company(),sesionVenta.getUserCon().getBs_Branch(),
                                                                                         sesionVenta.getUserCon().getBs_Country(), sesionVenta.getUserCon().getCc_Type(),
                                                                                         sesionVenta.getUserCon().getTx_MerchantP(),referencia,sesionVenta.getUserCon().getTx_OperationTypeP(),
                                                                                         sesionVenta.getUserCon().getTx_Currency(),"");
                                System.out.println("SALI DE FUNCION NATIVA Redencion");
                                detenerProgreso();
                                setRespondio(true);
                                System.out.println("jClsPinPadTBResponse.getRspDsError()(Redencion): "+jClsPinPadTBResponse.getRspDsError());
                                System.out.println("jClsPinPadTBResponse.getCc_Name()(Redencion): "+jClsPinPadTBResponse.getCc_Name());
                                System.out.println("jClsPinPadTBResponse.getCc_Number()(Redencion): "+jClsPinPadTBResponse.getCc_Number());
                                //setCancelado(false);
                                if(jClsPinPadTBResponse.getCc_Name()!=null)
                                {
                                    registros = new Vector();
                                    if(jClsPinPadTBResponse.getCc_Name().trim().equals("") || !(jClsPinPadTBResponse.getCc_Name().trim().length()==10))
                                    {
                                        System.out.println("Se cancelo la operacion desde el Pinpad");
                                        if(jClsPinPadTBResponse.getCc_Name().trim().equals(""))
                                            DialogoAceptar.mostrarDialogo("TMS Venta.", "<html>!No se registro la tarjeta correctamente!, <br>Si desea acumular estrellas deslize la tarjeta de Socio Intimo</html>.", Color.RED);
                                        else{
                                            if(!(jClsPinPadTBResponse.getCc_Name().trim().length()==10))
                                            DialogoAceptar.mostrarDialogo("TMS Venta.", "<html>!Número de tarjeta Inválido!, <br>Si desea acumular estrellas deslize una tarjeta de Socio Intimo</html>.", Color.RED);                                
                                        }
                                            limpiaProgreso();
                                    }    
                                    else
                                    {
                                     for(int i=0; i<Boletos.length;i++)
                                     {

                                            long tipoId = -1;
                                            for(int j=0; j<listado.size(); j++)
                                            {
                                              //  System.out.println("jtbl_boletos.getValueAt("+i+",1) = "+jtbl_boletos.getValueAt(i,1)+" ==> ("+j+")"+listado.get(j).getLetraTipo());
                                                if(Boletos[i][2].toString().trim().equals(listado.get(j).getLetraTipo()))
                                                    tipoId = listado.get(j).getTipoPasajeroId();
                                            }
                                            String origen  = "";
                                            String destino = "";
                                            if(Boletos[i][31].toString().equals("R"))
                                            {
                                                if(Boletos[i][21].toString().equals(sesionVenta.getTerminalLealtadNombreO()))
                                                {
                                                 origen  = ""+sesionVenta.getTerminalLealtadIdO();
                                                 destino = ""+sesionVenta.getTerminalLealtadIdD();
                                                }
                                                else
                                                {
                                                 destino = ""+sesionVenta.getTerminalLealtadIdO();
                                                 origen  = ""+sesionVenta.getTerminalLealtadIdD();
                                                }

                                            }
                                            else
                                            {
                                                 origen  = ""+sesionVenta.getTerminalLealtadIdO();
                                                 destino = ""+sesionVenta.getTerminalLealtadIdD();
                                            }                                            
                                            String producto = sesionVenta.getEmpresaId(Boletos[i][7].toString())+"" +
                                                    sesionVenta.getServicioId(Boletos[i][8].toString())+ "" +
                                                    origen+"" +
                                                    destino+"" + tipoId;
//                                                    sesionVenta.getTerminalLealtadId(Boletos[i][21].toString())+"" +
//                                                    sesionVenta.getTerminalLealtadId(Boletos[i][22].toString())+"" + tipoId;
                                            if(Boletos[i][31].equals("R")) producto = producto+"1";else producto = producto+"0";
                                            System.out.println("producto("+i+") = "+producto);
                                            Vector vec = new Vector();
                                            vec.add(i);
                                            vec.add(producto);
                                            vec.add(jClsPinPadTBResponse.getCc_Name().trim());
                                            vec.add(referencia);
                                            String unidad = "";
                                            if(Boletos[i][7].equals("Terminal Las Torres Puebla") || Boletos[i][7].equals("Autobuses Unidos"))
                                                unidad = "TP";
                                            else
                                            {
                                                if(Boletos[i][7].equals("Contactos Terrestres") || Boletos[i][7].equals("Contactos Terrestres 1"))
                                                    unidad = "CT";
                                                else
                                                    unidad = "AM";
                                            }
                                            vec.add(unidad);
                                            registros.add(vec);
                                            //Boletos[i][33] =referencia;
                                            //Boletos[i][34] =jClsPinPadTBResponse.getCc_Name();
                                            setTarjeta(jClsPinPadTBResponse.getCc_Name().trim());
                                     }
                                     setCompletado(true);
                                     cerrarVentana();
                                    }//else se cancelo por el pinpad
                                }                        
                                return jClsPinPadTBResponse;
                            }
                        };
    }    
    
    public void validarVentana(){
            this.setCompletado(false);
            this.dispose();
    }
    
    public void limpiaProgreso() {
    jLblBarraEstado.setText("<html> <font color="+ColoresInterfaz.cHTML3+">F1</font> Leer Tarjeta|  <font color="+ColoresInterfaz.cHTML3+">ESC</font> Salir sin leer tarjeta</html>");        
//        limpiaCampos();
//        jPnlContenido.removeAll();
//        this.jPnlContenido.setLayout(null);
//        this.getContentPane().repaint();
//        enProceso=0;
//        jLblTitulo.setText("");
//        jLblRespuesta.setText("");
//        jLblBarraEstado.setText(cadenaMenu);
//        this.jPnlContenedorCentral.requestFocusInWindow();
    }    
    
    private void detenerProgreso(){
        if(jProgreso!=null){
            jProgreso.finaliza();
            jProgreso = null;
        }
    }     
    
    private void cerrarVentana(){
        this.dispose();
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new JDlgAcumulaEstrellas(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }

    public boolean isCompletado() {
        return completado;
    }

    public void setCompletado(boolean completado) {
        this.completado = completado;
    }
    
    private boolean respondio = false;
    
    public boolean isRespondio() {
        return respondio;
    }

    public void setRespondio(boolean respondio) {
        this.respondio = respondio;
    }    
    
    public Object[][] getBoletos() {
        return this.Boletos;
    }     
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLblBarraEstado;
    private javax.swing.JTextField jtxt_numTarjeta;
    // End of variables declaration//GEN-END:variables
    




    public Vector getRegistros() {
        return registros;
    }

    public void setRegistros(Vector registros) {
        this.registros = registros;
    }

    public String getTarjeta() {
        return tarjeta;
    }

    public void setTarjeta(String tarjeta) {
        this.tarjeta = tarjeta;
    }

    public void daFoco()
    {
        jLblBarraEstado.requestFocus();
    }
    
}//Class