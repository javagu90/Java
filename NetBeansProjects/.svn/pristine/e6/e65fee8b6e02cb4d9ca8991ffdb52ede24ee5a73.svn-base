/*
 * JDlgBProgreso.java
 *
 * Created on 11 de enero de 2010, 05:32 PM
 */

package tmslealtad_carga;

/**
 *
 * @author  brojasa
 */
import com.sun.xml.rpc.tools.wsdlp.Main;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.lang.reflect.Field;
import java.util.Date;
import java.util.Observer;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;
public class JDlgBProgreso extends javax.swing.JDialog {
 
    private JClsColoresInterfaz ColoresInterfaz = new JClsColoresInterfaz();
    private JObsProgreso modelo;
    private JObsProgreso modelo1;
    private JIFCarga jframepar;
    private String strproceso ="";
    private DoTransation dth = null;
    private boolean finihilo = true;
    
    /** Creates new form JDlgBProgreso */
    public JDlgBProgreso(JObsProgreso pModelo1, JObsProgreso pModelo, final JIFCarga jframe, DoTransation dthilo) {
     dth = dthilo;
     dth.ftomainf = false;
     jframepar=jframe;
     this.setVisible(true);   
     try {
         this.setModal(false);
         this.setTitle("Log proceso batch");
         initComponents();  
         jTextArea1.setText("Iniciando \n "+ Settings.LealtadRemote.getToDate() ); 
         jPsbBarra.setFocusable(false);
         jPsbBarra.setIndeterminate(true);
    //     jPsbBarra.setString("0 s");
         jPsbBarra.setStringPainted(true);
         interfazColor();
         centrarJDialog();
         this.setVisible(true);
         modelo = pModelo;
         modelo1 = pModelo1;
         modelo.addObserver (new Observer (){
         public void update(java.util.Observable o, Object arg){
                 final int numero = Integer.valueOf(arg.toString());
                 SwingUtilities.invokeLater(new Runnable(){
                      public void run(){
                          
                   // SI va       jPsbBarra.setString(numero+" s");
                          jPsbBarra.setString(" ");
                          strproceso="";
                       //   System.out.println(" bandera de muestra inf  "+dth.ftomainf+"   "+dth.strContenedor); 
                           if ( dth.strContenedor.length() > 0){   //dth.ftomainf &&
                                System.out.println("Resultado del proceso "+dth.strContenedor);   
                                jTextArea1.append("\n"+dth.strContenedor);  
                                dth.strContenedor="";
                                
                           } 
                             
                     }
                 });  
               
             }
         });
         } catch (Exception e) {
         System.out.println("Error al hacer la instancia de  JDlgBProgreso ");   
         e.printStackTrace();
        }
      try{
      modelo1.addObserver (new Observer (){
             public void update(java.util.Observable o, Object arg){
                 final int numero = Integer.valueOf(arg.toString());
             //    System.out.println("finihilo "+finihilo);
                 if (finihilo){
                   dth.inicio();
                   finihilo=false;
                }
                  
             }
         });
         } catch (Exception e) {
         System.out.println("Error al hacer la instanciaa de  JDlgBProgreso ");   
         e.printStackTrace();
        }
    }  //  
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jbtBorrar = new javax.swing.JButton();
        jbtterminar = new javax.swing.JButton();
        jPsbBarra = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanel1.setPreferredSize(new java.awt.Dimension(100, 55));
        jbtBorrar.setText("Borrar");
        jbtBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtBorrarActionPerformed(evt);
            }
        });

        jbtterminar.setText("Terminar");
        jbtterminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtterminarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(246, 246, 246)
                .add(jbtBorrar)
                .add(49, 49, 49)
                .add(jbtterminar)
                .addContainerGap(247, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPsbBarra, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(jPsbBarra, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jbtBorrar)
                    .add(jbtterminar))
                .addContainerGap())
        );
        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtBorrarActionPerformed
// TODO add your handling code here:
        jbtBorrar.setText("");
                
    }//GEN-LAST:event_jbtBorrarActionPerformed

    private void jbtterminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtterminarActionPerformed
// TODO add your handling code here:
     
      jframepar.termina();

       if(modelo!=null){
           
            dth.termina();
            dth=null;
            modelo.detenerTimer();
            modelo.deleteObservers();
            modelo = null;
            modelo1.detenerTimer();
            modelo1.deleteObservers();
            modelo1 = null;
            jframepar.dispose();
            this.dispose();
            System.exit(0);
            return;
        }
       
    }//GEN-LAST:event_jbtterminarActionPerformed
    
   

    private void interfazColor() {
       jPsbBarra.setForeground(ColoresInterfaz.cFondoPieEncabezado);
       jPsbBarra.setFont(ColoresInterfaz.fuente3);
       jPsbBarra.setFont(ColoresInterfaz.fuente2);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jPsbBarra;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jbtBorrar;
    private javax.swing.JButton jbtterminar;
    // End of variables declaration//GEN-END:variables
    
     private void centrarJDialog(){
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = this.getSize();
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        this.setLocation( ( screenSize.width - frameSize.width ) / 2, (( screenSize.height - frameSize.height ) / 2)+22);
    }
    
  
}
