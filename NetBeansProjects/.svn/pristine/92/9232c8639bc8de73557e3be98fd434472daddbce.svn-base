/*
 * jDlgDatosIniciales.java
 *
 * Created on 24 de mayo de 2007, 11:15 PM
 */

package AsignacionVenta;


import DialogosX.JDlgAceptar;
import DialogosX.JDlgSiNo;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.text.NumberFormat;
import javax.swing.DefaultCellEditor;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.text.JTextComponent;
import tms_TextFields.JNumberTextField;
import tms_venta.JClsColoresInterfaz;
import tms_venta.SesionVenta;

/**
 *
 * @author  imunoz
 */
public class jDlgDatosIniciales extends javax.swing.JDialog {
    
    /**
     * Creates new form jDlgDatosIniciales
     */
    public jDlgDatosIniciales(double fondoMaximo, SesionVenta pSesionVenta) {
        tipoMsg=0;
        this.setModal(true);
        this.sesionVenta = pSesionVenta;
        this.setFondoMaximo(fondoMaximo);
        initComponents();
        jLblBarra.setText("<html><font color="+ColoresInterfaz.cHTML3+">&#171; &#187;</font> Ingresar Datos | <font color="+ColoresInterfaz.cHTML3+">F10</font> Aceptar Datos Iniciales | <font color="+ColoresInterfaz.cHTML3+">ESC</font> Cancelar</html>");
        interfazColor();
        jTblFolios.setSurrendersFocusOnKeystroke(true);
        this.editarFonInicial = true;
        this.directo=false;
        this.jFrmTxtFondo.setText("$ "+sesionVenta.customFormat("##,##0.00",getFondoMaximo()));
        this.setTitle("Inicio de sesion venta");
        jTblFolios.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(jtxtFolio1));
        jTblFolios.getColumnModel().getColumn(2).setCellEditor(new DefaultCellEditor(jtxtFolio2));
        jTblFolios.requestFocusInWindow();
    }
    
    public jDlgDatosIniciales(boolean edicion,boolean esNuevaSesion, double fondoMaximo, SesionVenta pSesionVenta, boolean pMismaSesion) {
        tipoMsg=0;
        this.mismaSesion=pMismaSesion;
        this.setModal(true);
        this.sesionVenta = pSesionVenta;
        this.setFondoMaximo(fondoMaximo);
        initComponents();
        jLblBarra.setText("<html><font color="+ColoresInterfaz.cHTML3+">&#171; &#187;</font> Ingresar Datos | <font color="+ColoresInterfaz.cHTML3+">F10</font> Aceptar Datos Iniciales | <font color="+ColoresInterfaz.cHTML3+">ESC</font> Cancelar</html>");
        interfazColor();
        jTblFolios.setSurrendersFocusOnKeystroke(true);
        this.editarFonInicial = edicion;
        this.esNuevaSesion = esNuevaSesion;
        deshabilitarFondoInicial(edicion);
        this.directo=true;
        this.jFrmTxtFondo.setText("$ "+sesionVenta.customFormat("##,##0.00",getFondoMaximo()));
        this.jTblFolios.requestFocusInWindow();
        this.setTitle("Reinicio de sesion venta");
        jTblFolios.setEnabled(false);
        jLblBarra.setText("<html><font color="+ColoresInterfaz.cHTML3+">ENTER</font> Continuar | <font color="+ColoresInterfaz.cHTML3+">ESC</font> Cancelar</html>");
        jTblFolios.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(jtxtFolio1));
        jTblFolios.getColumnModel().getColumn(2).setCellEditor(new DefaultCellEditor(jtxtFolio2));
        if(mismaSesion)
            jPnlFondo.requestFocusInWindow();
        else
            jTblFolios.requestFocusInWindow();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPnlFondo = new javax.swing.JPanel();
        jScrPnFolios = new javax.swing.JScrollPane();
        jTblFolios = new javax.swing.JTable();
        jTblFolios = new javax.swing.JTable()
        {
            public Component prepareEditor(
                TableCellEditor editor, int row, int column)
            {

                Component c = super.prepareEditor(editor, row, column);
                if (c instanceof JTextComponent)
                {
                    ((JTextField)c).selectAll();
                }
                return c;
            }
        };
        jLblBarra = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jFrmTxtFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("TMS - Datos Iniciales");
        setName("dlgFolios");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPnlFondo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPnlFondo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPnlFondoKeyPressed(evt);
            }
        });

        jScrPnFolios.setFocusable(false);
        jTblFolios.setFont(new java.awt.Font("Tahoma", 1, 12));
        inicializarTablaEmpresas();
        jTblFolios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTblFolios.setModel(tablaModeloEmpresas);
        jTblFolios.setFocusTraversalKeysEnabled(false);
        jTblFolios.getTableHeader().setReorderingAllowed(false);
        jTblFolios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTblFoliosKeyPressed(evt);
            }
        });

        jScrPnFolios.setViewportView(jTblFolios);

        jLblBarra.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLblBarra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblBarra.setText("<html><font color=\"+ColoresInterfaz.cHTML1+\">&#171; &#187;</font> Ingresar Datos | <font color=\"+ColoresInterfaz.cHTML1+\">F10</font> Aceptar Datos Iniciales | <font color=\"+ColoresInterfaz.cHTML1+\">ESC</font> Cancelar</html>");
        jLblBarra.setFocusable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText("Fondo Inicial: ");
        jLabel1.setFocusable(false);

        jFrmTxtFondo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        org.jdesktop.layout.GroupLayout jPnlFondoLayout = new org.jdesktop.layout.GroupLayout(jPnlFondo);
        jPnlFondo.setLayout(jPnlFondoLayout);
        jPnlFondoLayout.setHorizontalGroup(
            jPnlFondoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPnlFondoLayout.createSequentialGroup()
                .add(163, 163, 163)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jFrmTxtFondo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                .add(197, 197, 197))
            .add(jPnlFondoLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrPnFolios, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLblBarra, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
        );
        jPnlFondoLayout.setVerticalGroup(
            jPnlFondoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPnlFondoLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPnlFondoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jFrmTxtFondo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrPnFolios, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLblBarra, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPnlFondo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPnlFondo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPnlFondoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPnlFondoKeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            this.iniciaAppVenta=-1;
            this.dispose();
            return;
        }
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            validarCargaFolioOtraVeces();
            if(this.getAccesoVenta()==0){ 
                if(!sesionVenta.AuditarFuncion()){
                    DialogoAceptar.mostrarDialogo("¡Error al tratar de auditar la funcion Iniciar Sesion!","Contacte al administrador del sistema.",Color.RED);
                    this.iniciaAppVenta=-2;
                    this.dispose();
                    return;
                }
                this.iniciaAppVenta = 0; this.dispose();
            }
        }
    }//GEN-LAST:event_jPnlFondoKeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            this.iniciaAppVenta=-1;
            this.dispose();
            return;
        }
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            validarCargaFolioOtraVeces();
            if(this.getAccesoVenta()==0){
                if(!sesionVenta.AuditarFuncion()){
                    DialogoAceptar.mostrarDialogo("¡Error al tratar de auditar la funcion Iniciar Sesion!","Contacte al administrador del sistema.",Color.RED);
                    this.iniciaAppVenta = -2;
                    this.dispose();
                    return;
                }
                this.iniciaAppVenta = 0; this.dispose();
            }
        }
    }//GEN-LAST:event_formKeyPressed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
// TODO add your handling code here:
        if(mismaSesion){
            jLblBarra.setFocusable(false);
            jFrmTxtFondo.setFocusable(false);
            jLabel1.setFocusable(false);
            jTblFolios.setFocusable(false);
            jPnlFondo.setFocusable(true);
            jPnlFondo.requestFocusInWindow();
        }
        else{
            jPnlFondo.setFocusable(false);
            jTblFolios.setColumnSelectionInterval(1,1);
            jTblFolios.setRowSelectionInterval(0,0);
            jTblFolios.requestFocusInWindow();
        }
    }//GEN-LAST:event_formComponentShown

    private void jTblFoliosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTblFoliosKeyPressed
        switch(evt.getKeyCode()){
            case KeyEvent.VK_ESCAPE:
                this.iniciaAppVenta=-1;
                this.dispose();
                break;
            case KeyEvent.VK_F10:
                DialogoSiNo = new JDlgSiNo("¡Confirme...!", "¿Los datos ingresados son correctos?", true);
                if(DialogoSiNo.getResultado()){
                    validarCargaFolioPrimeraVez();
                    if(this.getAccesoVenta()==0){
                        if(!sesionVenta.AuditarFuncion()){
                            DialogoAceptar.mostrarDialogo("¡Error al tratar de auditar la funcion Iniciar Sesion!","Contacte al administrador del sistema.",Color.RED);
                            this.iniciaAppVenta=-2;
                            this.dispose();
                            return;
                        }
                        this.iniciaAppVenta=0; this.dispose();
                    }
                }
                break;
        }
    }//GEN-LAST:event_jTblFoliosKeyPressed

    private boolean validarDatosIngresados(){
        System.out.println("entra a validarDatosIngresados...");
        String folioDato = null;
        String folioDato2 = null;
        String empresaNombre = null;
        boolean valido = false;
        long[] foliosInicial = new long[empresasCantidad];
        long[] foliosFinal = new long[empresasCantidad];
        nombreEmpresaFinal = new String[empresasCantidad];
        if(jFrmTxtFondo.getText().length() != 0 || !editarFonInicial){
            if (editarFonInicial)
                FondoInicial = getFondoMaximo();
            if(FondoInicial <= getFondoMaximo()){
                //Validar por cada una de las empresas
                for(int i=0;i<empresasCantidad;i++){
                    valido = false;
                    empresaNombre = String.valueOf(tablaModeloEmpresas.getValueAt(i,0));
                    nombreEmpresaFinal[i] = empresaNombre;
                    folioDato = String.valueOf(tablaModeloEmpresas.getValueAt(i,1));
                    folioDato2 = String.valueOf(tablaModeloEmpresas.getValueAt(i,2));
                  //if(true)
                  if(!this.sesionVenta.getUserCon().getAplicacionVenta() || sesionVenta.isVtaBolBco(""))
                  {
                        if(!folioDato.equals("") && !folioDato.equals("null") && Long.valueOf(folioDato)>0)
                        {
                                valido = false;
                                DialogoAceptar.mostrarDialogo("Carga de Datos Iniciales", "<html>"+empresaNombre+":<br>Los folios para "+(sesionVenta.isVtaBolBco("")?"Boleto Blanco":"Call Center")+" deben ser 0.",Color.RED);
                        }
                        else
                        {
                            if(!folioDato2.equals("") && !folioDato2.equals("null") && Long.valueOf(folioDato2)>0)
                            {
                                    valido = false;
                                    DialogoAceptar.mostrarDialogo("Carga de Datos Iniciales", "<html>"+empresaNombre+":<br>Los folios para "+(sesionVenta.isVtaBolBco("")?"Boleto Blanco":"Call Center")+" deben ser 0.",Color.RED);
                            }
                            else
                                valido = true;
                        }
                  }
                  else
                  {
                    if(!folioDato.equals("") && !folioDato.equals("null") && Long.valueOf(folioDato)>0)
                    {
                        System.out.println("folioDato1(validarDatosIngresados0):"+folioDato);
                        foliosInicial[i] = Integer.parseInt(folioDato);
                        folioDato = String.valueOf(tablaModeloEmpresas.getValueAt(i,2));
                        if (!folioDato.equals("") && !folioDato.equals("null") && Long.valueOf(folioDato)>0){
                            System.out.println("folioDato2(validarDatosIngresados0):"+folioDato);
                            foliosFinal[i] = Integer.parseInt(folioDato);
                            if (foliosInicial[i] <= foliosFinal[i]){
                                valido = true;
                            }else{
                                valido = false;
                                DialogoAceptar.mostrarDialogo("Carga de Datos Iniciales", "<html>"+empresaNombre+":<br>El Folio Inicial no puede ser mayor o igual al Folio Final.",Color.RED);
                            }   
                        }else{
                            valido = false;
                            DialogoAceptar.mostrarDialogo("Carga de Datos Iniciales","<html>"+empresaNombre+":<br>Folio Final no Valido.",Color.RED);
                        }
                    }else{
                        valido = false;
                        DialogoAceptar.mostrarDialogo("Carga de Datos Iniciales","<html>"+empresaNombre+":<br>Folio Inicial no Valido.",Color.RED);
                    }
                  }
                    if(!valido) return false;
                }
            }else{
                valido = false;
                DialogoAceptar.mostrarDialogo("Carga de Datos Iniciales","El Fondo Inicial no puede ser mayor a "+getFondoMaximo(),Color.RED);
             }
            
        }else{
            valido = false;
            DialogoAceptar.mostrarDialogo("Carga de Datos Iniciales","Fondo Inicial no Valido.",Color.RED);
        }
        
        if(valido){
           //if(!validoMultiEmpresa()) return false;
           setEmpresaFolioInicial(foliosInicial);
           setEmpresaFolioFinal(foliosFinal);                  
        }
        return valido;
    }
    
    private boolean validarDatosIngresadosOtrasVeces(){
        //System.out.println("enter - esc validacion");
        String folioDato = null;
        String folioDato2 = null;
        String empresaNombre = null;
        boolean valido = false;
        long[] foliosInicial = new long[empresasCantidad];
        long[] foliosFinal = new long[empresasCantidad];
        nombreEmpresaFinal = new String[empresasCantidad];
        if(jFrmTxtFondo.getText().length() != 0 || !editarFonInicial){
            if (editarFonInicial)
                FondoInicial = getFondoMaximo();
            if(FondoInicial <= getFondoMaximo()){
                //Validar por cada una de las empresas
                for(int i=0;i<empresasCantidad;i++){
                    valido = false;
                    empresaNombre = String.valueOf(tablaModeloEmpresas.getValueAt(i,0));
                    nombreEmpresaFinal[i] = empresaNombre;
                    folioDato = String.valueOf(tablaModeloEmpresas.getValueAt(i,1));
                    folioDato2 = String.valueOf(tablaModeloEmpresas.getValueAt(i,2));
                  //if(true)
                  if(!this.sesionVenta.getUserCon().getAplicacionVenta() || sesionVenta.isVtaBolBco(""))
                  {
                        if(!folioDato.equals("") && !folioDato.equals("null") && Long.valueOf(folioDato)>0)
                        {
                                valido = false;
                                DialogoAceptar.mostrarDialogo("Carga de Datos Iniciales", "<html>"+empresaNombre+":<br>Los folios para Call Center deben ser 0.",Color.RED);
                        }
                        else
                        {
                            if(!folioDato2.equals("") && !folioDato2.equals("null") && Long.valueOf(folioDato2)>0)
                            {
                                    valido = false;
                                    DialogoAceptar.mostrarDialogo("Carga de Datos Iniciales", "<html>"+empresaNombre+":<br>Los folios para Call Center deben ser 0.",Color.RED);
                            }
                            else
                                valido = true;
                        }
                  }
                  else
                  {
                    if(!folioDato.equals("") && !folioDato.equals("null") && Long.valueOf(folioDato)>0){
                        System.out.println("folioDato1(validarDatosIngresadosOtrasVeces):"+folioDato);
                        foliosInicial[i] = Integer.parseInt(folioDato);
                        folioDato = String.valueOf(tablaModeloEmpresas.getValueAt(i,2));
                        if (!folioDato.equals("") && !folioDato.equals("null") && Long.valueOf(folioDato)>0){
                            System.out.println("folioDato2(validarDatosIngresadosOtrasVeces):"+folioDato);
                            foliosFinal[i] = Integer.parseInt(folioDato);
                            valido = true; // MOD: CONTINUA
                        }else{
                            DialogoAceptar.mostrarDialogo("Carga de Datos Iniciales","<html>"+empresaNombre+":<br>Folio Final no Valido.",Color.RED);
                        }
                    }else{
                        DialogoAceptar.mostrarDialogo("Carga de Datos Iniciales","<html>"+empresaNombre+":<br>Folio Inicial no Valido.",Color.RED);
                    }
                 }
                }
            }else{
                DialogoAceptar.mostrarDialogo("Carga de Datos Iniciales","El Fondo Inicial no puede ser mayor a "+getFondoMaximo(),Color.RED);
             }
        }else{
                DialogoAceptar.mostrarDialogo("Carga de Datos Iniciales","Fondo Inicial no Valido.",Color.RED);
            }
        if (valido){
           setEmpresaFolioInicial(foliosInicial);
           setEmpresaFolioFinal(foliosFinal);                  
        }
        return valido;
    }
    
    private boolean ValFolios(){
        System.out.println("Valida folios en Reinicio Sesion");
        int r;
        for(int i=0;i<empresasCantidad;i++){ 
            if(!this.sesionVenta.getUserCon().getAplicacionVenta() || sesionVenta.isVtaBolBco(""))
                r = 1;
            else
            {
            r=sesionVenta.validarFolios(sesionVenta.getUserCon().getTerminalId(),Long.valueOf(empresasNombre[i][0]),
                    getEmpresaFolioInicial()[i], getEmpresaFolioFinal()[i],sesionVenta.getUserCon().getUsuarioId());
            }
            /*
                0 --> No Válido
               10 --> Rango de Folios no configurado en Folios de la Terminal
               20 --> Uno o mas boletos dentro del Rango de Folios ha sido vendido
               30 --> Rango de Folios configurados en un Corte Pendiente
                1 --> Válido
             */
            
            switch(r){
                case -1: 
                    DialogoAceptar.mostrarDialogo("Sesion invalida", "Intentelo mas tarde.", Color.RED);
                    return false;
                case  0: 
                    DialogoAceptar.mostrarDialogo("Folios.", "Folios no validos", Color.RED);
                    return false;
                case 10: 
                    DialogoAceptar.mostrarDialogo("Folios.", "Rango de Folios no configurado en Folios de la Terminal.", Color.RED);
                    return false;
                case 20: 
                    String strTMsg="Uno o mas boletos dentro del Rango de Folios ha sido vendido.";
                    if(tipoMsg==69){
                        strTMsg="<html>Uno o mas boletos dentro del Rango de Folios ha sido vendido." +
                                "<br><font color=ff0000>Por favor realiza tu corte.</font></html>";
                    }
                    DialogoAceptar.mostrarDialogo("Folios.", strTMsg, Color.RED);
                    return false;
                case 30: 
                    DialogoAceptar.mostrarDialogo("Folios.", "Rango de Folios configurados en un Corte Pendiente.", Color.RED);
                    return false;
            }
        }
        return true;
    }
    
    public void centrarDialogo(){
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = this.getSize();
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        this.setLocation( ( screenSize.width - frameSize.width ) / 2, ( screenSize.height - frameSize.height ) / 2 );
    }

    private void insertarValorEnSesion() {
        int error=0;
        if ((error=sesionVenta.insertarDatosSesionInicio(empresasNombre,
                FondoInicial,
                empresaFolioInicial,
                empresaFolioFinal, nombreEmpresaFinal))==0){
            System.out.println("FOLIAJE");
            this.iniciaAppVenta = 0;
        }else{
            DialogoAceptar.mostrarDialogo("¡No fue posible cargar los folios!", "Contacte al administrador del sistema.",Color.RED);
            //System.out.println("errrrrrrrrrrror "+error);
            this.iniciaAppVenta = error;
        }
    }
    // MODIFICADO ERROR
    public void mostrarFoliosSesion(){
        String[][] folios=sesionVenta.getFoliosSesion();
        for(int i=0;i<folios.length; i++){
            if(folios[i][0] != null){
                tablaModeloEmpresas.setValueAt(folios[i][0],i,1);
                tablaModeloEmpresas.setValueAt(folios[i][1],i,2);
            }
        }
    }

    private void insertarRefoliado() {
        int error=0;
        if ((error=sesionVenta.insertarDatosRefoliado(esNuevaSesion,
                empresasNombre,
                empresaFolioInicial,
                empresaFolioFinal, nombreEmpresaFinal))==0){
            System.out.println("REFOLIADO");
            this.iniciaAppVenta = 0;
        }else{
            DialogoAceptar.mostrarDialogo("¡No fue posible cargar los folios!", "Contacte al administrador del sistema.",Color.RED);
            this.iniciaAppVenta = error;
        }
    }

    private void deshabilitarFondoInicial(boolean edicion) {
        
    }

    private void validarCargaFolioPrimeraVez() {
        if(!sesionVenta.bloqueaPermisoFolios("B")){
            DialogoAceptar.mostrarDialogo("Ingreso de folios.", "<html>No fue posible realizar el foliado.<br>Intente de nuevo mas tarde.</html>",Color.RED);
            return;
        }
        if(!validarDatosIngresados()){
            if(!sesionVenta.bloqueaPermisoFolios("L"))
                    DialogoAceptar.mostrarDialogo("Ingreso de folios.", "<html>No fue posible realizar el foliado.<br>Intente de nuevo mas tarde.</html>",Color.RED);
            if(directo) jLblBarra.setText("<html><font color="+ColoresInterfaz.cHTML3+">ENTER</font> Continuar | <font color="+ColoresInterfaz.cHTML3+">ESC</font> Cancelar</html>");
            else jLblBarra.setText("<html><font color="+ColoresInterfaz.cHTML3+">&#171; &#187;</font> Ingresar Datos | <font color="+ColoresInterfaz.cHTML3+">F10</font> Aceptar Datos Iniciales | <font color="+ColoresInterfaz.cHTML3+">ESC</font> Cancelar</html>");
            return;
        }
        if(!mismaSesion)
            if(!ValFolios()){
                if(!sesionVenta.bloqueaPermisoFolios("L"))
                        DialogoAceptar.mostrarDialogo("Ingreso de folios.", "<html>No fue posible realizar el foliado.<br>Intente de nuevo mas tarde.</html>",Color.RED);
                jLblBarra.setText("<html><font color="+ColoresInterfaz.cHTML3+">&#171; &#187;</font> Ingresar Datos | <font color="+ColoresInterfaz.cHTML3+">F10</font> Aceptar Datos Iniciales | <font color="+ColoresInterfaz.cHTML3+">ESC</font> Cancelar</html>");
                return;
            }
        
        if(editarFonInicial){
            insertarValorEnSesion();
        }else{
            insertarRefoliado();
        }
        if(!sesionVenta.bloqueaPermisoFolios("L")){
            DialogoAceptar.mostrarDialogo("Ingreso de folios.", "<html>No fue posible liberar los recursos (L/B).<br>Contacte al administrador.</html>",Color.RED);
            this.iniciaAppVenta = -1;
            return;
        }
    }
    
    private void validarCargaFolioOtraVeces() {
        if(!sesionVenta.bloqueaPermisoFolios("B")){
            DialogoAceptar.mostrarDialogo("Ingreso de folios.", "<html>No fue posible realizar el foliado.<br>Intente de nuevo mas tarde.</html>",Color.RED);
            return;
        }
        
        if(!validarDatosIngresadosOtrasVeces()){
            if(!sesionVenta.bloqueaPermisoFolios("L"))
                    DialogoAceptar.mostrarDialogo("Ingreso de folios.", "<html>No fue posible realizar el foliado.<br>Intente de nuevo mas tarde.</html>",Color.RED);
            if(directo) jLblBarra.setText("<html><font color="+ColoresInterfaz.cHTML3+">ENTER</font> Continuar | <font color="+ColoresInterfaz.cHTML3+">ESC</font> Cancelar</html>");
            else jLblBarra.setText("<html><font color="+ColoresInterfaz.cHTML3+">&#171; &#187;</font> Ingresar Datos | <font color="+ColoresInterfaz.cHTML3+">F10</font> Aceptar Datos Iniciales | <font color="+ColoresInterfaz.cHTML3+">ESC</font> Cancelar</html>");
            return;
        }
        
        if(mismaSesion)
            if(!ValFolios()){
                if(!sesionVenta.bloqueaPermisoFolios("L"))
                        DialogoAceptar.mostrarDialogo("Ingreso de folios.", "<html>No fue posible realizar el foliado.<br>Intente de nuevo mas tarde.</html>",Color.RED);
                jLblBarra.setText("<html><font color="+ColoresInterfaz.cHTML3+">ENTER</font> Continuar | <font color="+ColoresInterfaz.cHTML3+">ESC</font> Cancelar</html>");
                return;
            }
        
        if(editarFonInicial){
            insertarValorEnSesion();
        }else{
            insertarRefoliado();
        }
        if(!sesionVenta.bloqueaPermisoFolios("L")){
            DialogoAceptar.mostrarDialogo("Ingreso de folios.", "<html>No fue posible liberar los recursos (L/B).<br>Contacte al administrador.</html>",Color.RED);
            this.iniciaAppVenta = -1;
            return;
        }
    }
    
    public void inicializarEmpresasNombre(boolean difEmpMismoFolio) {
        Object[] empresasDatosTabla = new Object[3];
        String[][] empresasDatosTexto = new String[1][2];
        empresasNombre = sesionVenta.getUserCon().getEmpresasConFolios();
        if (!difEmpMismoFolio){
            System.out.println("Entra a empresas 1..");
            empresasCantidad = sesionVenta.getUserCon().getEmpresasConFolios().length;
            int iX;
            for(iX=0; iX<empresasNombre.length; iX++){
                //if(empresasNombre[iX][1].equals(sesionVenta.getUserCon().getEmpresaPrincipal())){
                    empresasDatosTabla[0] = empresasNombre[iX][1];
                    empresasDatosTabla[1] = Integer.parseInt("0");
                    empresasDatosTabla[2] = Integer.parseInt("0");
                    tablaModeloEmpresas.addRow(empresasDatosTabla);
                    jTblFolios.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(jtxtFolio1));
                    jTblFolios.getColumnModel().getColumn(2).setCellEditor(new DefaultCellEditor(jtxtFolio2));
                //}
            }
        }else{
            System.out.println("Entra a empresas 1..");
            empresasCantidad = 1;
            //for(int i=0; i<empresasCantidad; i++){
                empresasDatosTabla[0] = sesionVenta.getUserCon().getEmpresaPrincipal();
                empresasDatosTabla[1] = Integer.parseInt("0");
                empresasDatosTabla[2] = Integer.parseInt("0");
                
                //Inicializar tabla de empresas para una nada mas
                empresasDatosTexto[0][0] = String.valueOf(sesionVenta.getEmpresaId(sesionVenta.getUserCon().getEmpresaPrincipal()));
                empresasDatosTexto[0][1] = sesionVenta.getUserCon().getEmpresaPrincipal();
                empresasNombre = empresasDatosTexto;
                tablaModeloEmpresas.addRow(empresasDatosTabla);
                jTblFolios.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(jtxtFolio1));
                jTblFolios.getColumnModel().getColumn(2).setCellEditor(new DefaultCellEditor(jtxtFolio2));
            //}
        }
    }
    
    private void inicializarTablaEmpresas(){
        tablaModeloEmpresas = new javax.swing.table.DefaultTableModel(
            new String [] {
                "Empresa", "Folio Inicial", "Folio Final"
            },0) {
            /*Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.Long.class
            };*/
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            /*public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }*/

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
    }

    public double getFondoMaximo() {
        return fondoMaximo;
    }

    private void setFondoMaximo(double fondoMaximo) {
        this.fondoMaximo = fondoMaximo;
    }

    public long[] getEmpresaFolioFinal() {
        return empresaFolioFinal;
    }
    
    public String[] getNombreEmpresaFinal() {
        return nombreEmpresaFinal;
    }

    public void setEmpresaFolioFinal(long[] empresaFolioFinal) {
        this.empresaFolioFinal = empresaFolioFinal;
    }

    public long[] getEmpresaFolioInicial() {
        return empresaFolioInicial;
    }

    public void setEmpresaFolioInicial(long[] empresaFolioInicial) {
        this.empresaFolioInicial = empresaFolioInicial;
    }
    
    /******************************** VENTA ***********************************/
    public int getAccesoVenta(){ return this.iniciaAppVenta; }

    private void interfazColor(){
        jPnlFondo.setBackground(ColoresInterfaz.cFondoDialogo);
        jFrmTxtFondo.setOpaque(true);
        jFrmTxtFondo.setBackground(ColoresInterfaz.cFondoDialogo);
        jFrmTxtFondo.setForeground(ColoresInterfaz.cFondoPieEncabezado);
        jLblBarra.setForeground(ColoresInterfaz.cTextoAyuda1);
        jTblFolios.setBackground(ColoresInterfaz.cFondoDialogo);
 
        setFont(ColoresInterfaz.fuente1);
        jLabel1.setFont(ColoresInterfaz.fuente1);
        jFrmTxtFondo.setFont(new Font("Calibri",1,18));
        jTblFolios.setFont(ColoresInterfaz.fuente1);
        
        jLblBarra.setFont(ColoresInterfaz.fuente1);
    }

    public void setTipoMsg(int pTMsg) {
        tipoMsg = pTMsg;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jFrmTxtFondo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLblBarra;
    private javax.swing.JPanel jPnlFondo;
    private javax.swing.JScrollPane jScrPnFolios;
    private javax.swing.JTable jTblFolios;
    // End of variables declaration//GEN-END:variables
    private int tipoMsg=0;
    private jDlgDatosSupervisor dlgSupervisor;
    private SesionVenta sesionVenta;
    private DefaultTableModel tablaModeloEmpresas;
    private double FondoInicial;
    private long FolioInicial;
    private long FolioFinal;
    private double fondoMaximo;    
    private boolean editarFonInicial;
    /*private String numeroUsr;
    private String claveSuper;*/
    private boolean esNuevaSesion;
    private String[][] empresasNombre;    
    int empresasCantidad;
    private long[] empresaFolioInicial;
    private long[] empresaFolioFinal;
    private String[] nombreEmpresaFinal;
    private int iniciaAppVenta=-1;
    private boolean directo=true;
    private boolean mismaSesion;

    private JDlgAceptar DialogoAceptar = new JDlgAceptar();
    private JNumberTextField jtxtFolio1 = new JNumberTextField();
    private JNumberTextField jtxtFolio2 = new JNumberTextField();
    private JDlgSiNo DialogoSiNo;
    private JClsColoresInterfaz ColoresInterfaz = new JClsColoresInterfaz();
}