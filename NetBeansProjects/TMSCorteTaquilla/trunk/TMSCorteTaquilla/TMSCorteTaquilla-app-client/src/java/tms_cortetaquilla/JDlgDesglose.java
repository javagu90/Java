/*
 * JDlgDesglose.java
 *
 * Created on 16 de agosto de 2007, 09:10 PM
 */

package tms_cortetaquilla;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.DefaultCellEditor;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.text.JTextComponent;
import tms_TextFields.JCuantityTextField;
import tms_TextFields.JNumberTextField;
import java.text.DecimalFormat;

/**
 *
 * @author  ocruz
 */
public class JDlgDesglose extends javax.swing.JDialog implements KeyListener{
    
    /** Creates new form JDlgDesglose */
    public JDlgDesglose(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jTblDesglose.setSurrendersFocusOnKeystroke(true);
        centrar();
        cargaDenominaciones();
        xAnchoColumnas();
        CamposEspeciales();
        jTblDesglose.getInputMap(JTable.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),
                jTblDesglose.getInputMap(JTable.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).get(KeyStroke.getKeyStroke(KeyEvent.VK_RIGHT, 0)));
        jTblDesglose.setRowSelectionInterval(0,0);
        jTblDesglose.setColumnSelectionInterval(0,0);
        jTblDesglose.requestFocusInWindow();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScpDesglose = new javax.swing.JScrollPane();
        jTblDesglose = new javax.swing.JTable();
        jTblDesglose = new javax.swing.JTable()
        {
            public Component prepareEditor(
                TableCellEditor editor, int row, int column)
            {

                Component c = super.prepareEditor(editor, row, column);
                if (c instanceof JTextComponent)
                {
                    ((JTextField)c).selectAll();
                }
                return c;
            }
        };
        jLabel1 = new javax.swing.JLabel();
        jLblTotal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Desglose de Efectivo");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jScpDesglose.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Desgloce", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), java.awt.Color.darkGray));
        jTblDesglose.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTblDesglose.setModel(xListado);
        jTblDesglose.setName("tabla");
        jTblDesglose.getTableHeader().setReorderingAllowed(false);
        jTblDesglose.addKeyListener(this);
        jTblDesglose.setFocusTraversalKeysEnabled(true);
        jScpDesglose.setViewportView(jTblDesglose);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText("<html><font color=ff0000>Alt+D</font> Desgloce | <font color=ff0000>ENTER</font> Aceptar</html>");

        jLblTotal.setBackground(java.awt.Color.white);
        jLblTotal.setFont(new java.awt.Font("Tahoma", 1, 13));
        jLblTotal.setForeground(java.awt.Color.red);
        jLblTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLblTotal.setText("jLabel2");
        jLblTotal.setOpaque(true);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jScpDesglose, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jLblTotal)
                        .addContainerGap())))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jScpDesglose, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 231, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLblTotal)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel1))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
// TODO add your handling code here:
        jTblDesglose.setRowSelectionInterval(0,0);
        jTblDesglose.setColumnSelectionInterval(0,0);
        jTblDesglose.requestFocusInWindow();
    }//GEN-LAST:event_formComponentShown
    
    private void finalizar(){
        int i;
        total=0;
        for(i=0; i<denominaciones.length; i++)
            total+=Double.valueOf(denominaciones[i][2].toString());
        
        if(total==0) denominaciones=null;
        this.dispose();
    }
    
    private void centrar(){
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = getSize();
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        this.setLocation( ( screenSize.width - frameSize.width ) / 2, ( screenSize.height - frameSize.height ) / 2 );
    }
    
    private void CamposEspeciales(){
        TableColumn Column = jTblDesglose.getColumnModel().getColumn(0);
        cantidad = new JNumberTextField();
        Column.setCellEditor(new DefaultCellEditor(cantidad));
        
        TableColumn Column2 = jTblDesglose.getColumnModel().getColumn(2);
        JCuantityTextField monto = new JCuantityTextField();
        Column2.setCellEditor(new DefaultCellEditor(monto));

        jTblDesglose.setOpaque(true);
        jTblDesglose.setDefaultRenderer(Object.class, new AttributiveCellRenderer());
    }
    
    private void xAnchoColumnas(){
        TableColumn column = null;
        int anchoContenedor = jScpDesglose.getWidth();
        for (int i = 0; i < 3; i++) {
            column = jTblDesglose.getColumnModel().getColumn(i);
            switch(i){
                case 0: column.setPreferredWidth(Math.round(anchoContenedor*(float)0.20)); break;
                case 1: column.setPreferredWidth(Math.round(anchoContenedor*(float)0.60)); break;
                case 2: column.setPreferredWidth(Math.round(anchoContenedor*(float)0.20)); break;
            }
            column.setResizable(false);
        }
    }
    
    private void cargaDenominaciones(){
        denominaciones = new Object[11][3];
        denominaciones[0][1]="1000.00";
        denominaciones[1][1]="500.00";
        denominaciones[2][1]="200.00";
        denominaciones[3][1]="100.00";
        denominaciones[4][1]="50.00";
        denominaciones[5][1]="20.00";
        denominaciones[6][1]="10.00";
        denominaciones[7][1]="5.00";
        denominaciones[8][1]="2.00";
        denominaciones[9][1]="1.00";
        denominaciones[10][1]="0.50";
        for(int i=0; i<11; i++){
            denominaciones[i][0]="0";
            denominaciones[i][2]="0.00";
        }
        xListado.setDataVector(denominaciones, xEncabezado);
    }
    
    public Object[][] getDesglose(){
        return denominaciones;
    }
    
    public double getTotalMonto(){
        return total;
    }

    public void keyTyped(KeyEvent e) {
    }

    public void keyPressed(KeyEvent e) {
        if(e.isAltDown() && e.getKeyCode()==KeyEvent.VK_D){
            jTblDesglose.setRowSelectionInterval(0,0);
            jTblDesglose.setColumnSelectionInterval(0,0);
            jTblDesglose.requestFocusInWindow();
        }
        else
            if(e.getKeyCode()==KeyEvent.VK_ENTER) finalizar();
    }

    public void keyReleased(KeyEvent e) {
    }
    
    class AttributiveCellRenderer extends JLabel  implements TableCellRenderer {
      
        public AttributiveCellRenderer() {
            setOpaque(true);
            setHorizontalAlignment( RIGHT );
        }
      
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            if(value==null || value.equals("")){
                if(column==0)
                    setText("0");
                else
                    setText(null);
            }
            else
              setText(String.valueOf(value));
            
            if(row == jTblDesglose.getSelectedRow() && column == jTblDesglose.getSelectedColumn())
                this.setBackground(SELECCION);
            else
                this.setBackground(BLANCO);
            
            if(column == 2){
                int a=0;
                double b;
                try{
                    a=Integer.valueOf(jTblDesglose.getValueAt(row, 0).toString());
                }catch(NumberFormatException nfex){ 
                    a=0;
                }
                b=Double.valueOf(jTblDesglose.getValueAt(row, 1).toString());
                denominaciones[row][0]=a;
                denominaciones[row][1]=b;
                denominaciones[row][2]=a*b;
                setText(""+(a*b));
                xListado.setValueAt(getText(),row,2);
                suma=0;
                for(st=0; st<denominaciones.length; st++)
                    suma+=Double.valueOf(denominaciones[st][2].toString());
                jLblTotal.setText("$ "+customFormat("##,##0.00",suma));
            }
            
          return this;
        }
    }
    
    public String customFormat(String pattern, double value ) {
        DecimalFormat myFormatter = new DecimalFormat(pattern);
        return myFormatter.format(value);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLblTotal;
    private javax.swing.JScrollPane jScpDesglose;
    private javax.swing.JTable jTblDesglose;
    // End of variables declaration//GEN-END:variables
    private Object[] xEncabezado = {"Cantidad", "Denominacion", "Monto"};
    private DefaultTableModel xListado = new DefaultTableModel(null, xEncabezado){
            public boolean isCellEditable(int row, int col) {
                if(col==0) return true;
                return false;
            }
            public Class getColumnClass(int c) {
                return getValueAt(0, c).getClass();
            }
    };
    
    private Object[][] denominaciones;
    private double total;
    private static Color SELECCION = new Color(184, 207, 229);
    private static Color BLANCO = new Color(255, 255, 255);
    private JNumberTextField cantidad;
    private int st;
    private double suma;
}
