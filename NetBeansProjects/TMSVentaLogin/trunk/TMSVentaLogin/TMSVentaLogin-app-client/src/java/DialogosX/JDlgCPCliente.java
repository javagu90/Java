/*
 * JDlgSiNo.java
 *
 * Created on 7 de septiembre de 2007, 01:47 PM
 */

package DialogosX;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import tms_venta.JClsColoresInterfaz;

/**
 *
 * @author  ocruz
 */
public class JDlgCPCliente extends javax.swing.JDialog {
    
    /** Creates new form JDlgSiNo */
    public JDlgCPCliente(JDialog d) {
        super(d);
        initComponents();
        interfazColor();
        centrarJDialog();
        jLblMensaje.setForeground(ColoresInterfaz.cFondoVentana);
        jLblBarraEstado.setText("<html> <font color="+ColoresInterfaz.cHTML3+">Enter</font> Aceptar | <font color="+ColoresInterfaz.cHTML3+">ESC</font> Cancelar </html>");
        this.setTitle("Datos del Cliente");
        this.setModal(true);
        this.setVisible(true);
    }
    
    public void mostrarDialogo() {
        jLblMensaje.setForeground(ColoresInterfaz.cFondoVentana);
        this.setTitle("Datos del Cliente");
        this.setModal(true);
        this.setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLblMensaje = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLblBarraEstado = new javax.swing.JLabel();
        jtxt_CPCliente = new tms_TextFields.JNumberTextField();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jLblMensaje.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLblMensaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblMensaje.setText("Solicite el Codigo Postal del Cliente");
        jLblMensaje.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jLblMensajeFocusGained(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Codigo Postal:");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLblBarraEstado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLblBarraEstado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblBarraEstado.setText("<html><font color=\"+ColoresInterfaz.cHTML1+\">ENTER</font> Aceptar | <font color=\"+ColoresInterfaz.cHTML1+\">ESC</font> Cancelar");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLblBarraEstado, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLblBarraEstado, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        );

        jtxt_CPCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxt_CPClienteKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxt_CPClienteKeyTyped(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLblMensaje, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jtxt_CPCliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 118, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLblMensaje)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jtxt_CPCliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 25, Short.MAX_VALUE)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost

    }//GEN-LAST:event_formFocusLost

    
    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        jtxt_CPCliente.requestFocusInWindow();
    }//GEN-LAST:event_formFocusGained

    private void jLblMensajeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jLblMensajeFocusGained
        jtxt_CPCliente.requestFocusInWindow();
    }//GEN-LAST:event_jLblMensajeFocusGained

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        jtxt_CPCliente.requestFocusInWindow();
    }//GEN-LAST:event_formWindowGainedFocus

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        jtxt_CPCliente.requestFocusInWindow();
    }//GEN-LAST:event_formComponentShown

    private void jtxt_CPClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxt_CPClienteKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) {
            if(jtxt_CPCliente.getText().length()<5 ||jtxt_CPCliente.getText().length()>5) {
                this.setAlwaysOnTop(false);
                this.setModal(false);
                JOptionPane.showMessageDialog(this,"Debes escribir un Codigo Postal Valido.","TMS Venta.",JOptionPane.ERROR_MESSAGE);
                //JDlgAceptar DialogoAceptar = new JDlgAceptar();
                //DialogoAceptar.mostrarDialogo("TMS Venta.", "<html>!Debes escribir un Codigo Postal Valido!</html>.", Color.RED);
                this.setAlwaysOnTop(true);
                this.setModal(true);
                jtxt_CPCliente.selectAll();
                jtxt_CPCliente.requestFocus();
            } else {
                this.setCP(jtxt_CPCliente.getText());
                dispose();
            }
        }
        if(evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            this.setCP("");
            dispose();
        }

        if(evt.getKeyCode()==KeyEvent.VK_UP || evt.getKeyCode()==KeyEvent.VK_DOWN)
            jtxt_CPCliente.requestFocus();
}//GEN-LAST:event_jtxt_CPClienteKeyPressed

    private void jtxt_CPClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxt_CPClienteKeyTyped
       if(jtxt_CPCliente.getText().length()>=5)
             evt.consume();
    }//GEN-LAST:event_jtxt_CPClienteKeyTyped
/**/   
    private void centrarJDialog(){
        screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        //this.setSize(screenSize.width-24, screenSize.height-66);
        Dimension frameSize = this.getSize();
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        this.setLocation( ( screenSize.width - frameSize.width ) / 2, (( screenSize.height - frameSize.height ) / 2)+22);
    }

    private void interfazColor(){        
        setFont(ColoresInterfaz.fuente1);
        jLblMensaje.setFont(ColoresInterfaz.fuente0);
        jtxt_CPCliente.setFont(ColoresInterfaz.fuente1);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLblBarraEstado;
    private javax.swing.JLabel jLblMensaje;
    private javax.swing.JPanel jPanel1;
    private tms_TextFields.JNumberTextField jtxt_CPCliente;
    // End of variables declaration//GEN-END:variables
    private Dimension screenSize;
    private JClsColoresInterfaz ColoresInterfaz = new JClsColoresInterfaz();
    private String CP = "";

    /**
     * @return the CP
     */
    public String getCP() {
        return CP;
    }

    /**
     * @param CP the CP to set
     */
    public void setCP(String CP) {
        this.CP = CP;
    }
}
