/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JIFTarjetasNoPermitidas.java
 *
 * Created on 9/01/2012, 11:53:56 PM
 */

package tms_tarjetasnopermitidas;

import java.awt.event.KeyEvent;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import tarjetasNoPermitidas.generalFacadeBeanRemote;

/**
 *
 * @author vgonzalez
 */
public class JIFTarjetasNoPermitidas extends javax.swing.JInternalFrame {
  private Vector datosIniciales;
  private long usuarioId;
  public rc4 enc = new rc4();
  public String noTarjeta = "";
  public String noTarjetaEncriptada = "";
  public Vector listaTarjetas = new Vector();
  public generalFacadeBeanRemote    busquedas;
  public DefaultListModel model;
    /** Creates new form JIFTarjetasNoPermitidas */
    public JIFTarjetasNoPermitidas(Vector pDatosIniciales) {
        initComponents();
        //((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
        this.setIconifiable(true);
        this.setTitle("Bloqueo de Tarjetas de Credito");
        JDialog di = new JDialog();
        di.setDefaultLookAndFeelDecorated(true);
        di.dispose();
        busquedas = lookupGeneralFacadeBeanRemote();
        this.datosIniciales = pDatosIniciales;
        this.setUsuarioId(Long.parseLong(datosIniciales.get(0).toString()));
        this.buscarTarjetas();
        jtxtNoTarjeta.requestFocus();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlstListaTarjetas = new javax.swing.JList();
        jbtnAgregar = new javax.swing.JButton();
        jtxtNoTarjeta = new tms_TextFields.JNumberTextField();
        jLabel1 = new javax.swing.JLabel();
        jbtnRemover = new javax.swing.JButton();
        jpnel = new javax.swing.JPanel();
        jlbl_barraEstado = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tarjetas No Permitidas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jlstListaTarjetas.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jlstListaTarjetas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jlstListaTarjetas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jlstListaTarjetasFocusGained(evt);
            }
        });
        jlstListaTarjetas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jlstListaTarjetasKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jlstListaTarjetasKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jlstListaTarjetas);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 282, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 261, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbtnAgregar.setFont(new java.awt.Font("Tahoma", 1, 12));
        jbtnAgregar.setText("Agregar Tarjeta");
        jbtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAgregarActionPerformed(evt);
            }
        });
        jbtnAgregar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jbtnAgregarFocusGained(evt);
            }
        });

        jtxtNoTarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtNoTarjetaActionPerformed(evt);
            }
        });
        jtxtNoTarjeta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtNoTarjetaFocusGained(evt);
            }
        });
        jtxtNoTarjeta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtNoTarjetaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtNoTarjetaKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("No. de Tarjeta:");

        jbtnRemover.setFont(new java.awt.Font("Tahoma", 1, 12));
        jbtnRemover.setText("Remover Tarjeta");
        jbtnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRemoverActionPerformed(evt);
            }
        });
        jbtnRemover.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jbtnRemoverFocusGained(evt);
            }
        });

        jpnel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        org.jdesktop.layout.GroupLayout jpnelLayout = new org.jdesktop.layout.GroupLayout(jpnel);
        jpnel.setLayout(jpnelLayout);
        jpnelLayout.setHorizontalGroup(
            jpnelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jlbl_barraEstado, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
        );
        jpnelLayout.setVerticalGroup(
            jpnelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jlbl_barraEstado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        jLabel2.setText("Rev.120112");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jtxtNoTarjeta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 196, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jbtnRemover, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jbtnAgregar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                .addContainerGap())
            .add(jpnel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(433, Short.MAX_VALUE)
                .add(jLabel2)
                .add(8, 8, 8))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jtxtNoTarjeta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jbtnAgregar))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(28, 28, 28)
                        .add(jbtnRemover)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jpnel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarTarjetas(){
        jlstListaTarjetas.removeAll();
        model = new DefaultListModel();
        listaTarjetas = this.busquedas.buscarTarjetas();
        if(listaTarjetas == null || listaTarjetas.size()==0)
            JOptionPane.showMessageDialog(this,"¡No hay tarjetas no permitidas para mostrar!","Mensaje de Alerta", JOptionPane.WARNING_MESSAGE);
        else
        {
           for(int i=0;i<listaTarjetas.size();i++)
           {
               Vector v = (Vector)listaTarjetas.get(i);
               model.addElement(enc.desencriptar(v.get(1).toString()));
           }
        }
       jlstListaTarjetas.setModel(model);
    }
    
    private void jtxtNoTarjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtNoTarjetaActionPerformed
       
    }//GEN-LAST:event_jtxtNoTarjetaActionPerformed

    private void jbtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAgregarActionPerformed
        for(int i=0; i<model.getSize(); i++)
        {
            if(model.getElementAt(i).toString().equals(jtxtNoTarjeta.getText().trim()))
            {
                JOptionPane.showMessageDialog(this,"¡El Numeo de Tarjeta ya se encuentra en la lista! ","Mensaje de Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
       if(jtxtNoTarjeta.getText().trim().equals("") || jtxtNoTarjeta.getText().trim().length()<8)
       {
         JOptionPane.showMessageDialog(this,"¡Introduzca un Número de Tarjeta Válido!","Mensaje de Error", JOptionPane.ERROR_MESSAGE);
         return;
       }
        if(JOptionPane.showConfirmDialog(this, "¿Seguro que desea agregar la tarjeta "+jtxtNoTarjeta.getText()+" \na la lista de tarjetas no permitidas?", "Mensaje de Confirmación", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            noTarjeta = jtxtNoTarjeta.getText();
            noTarjetaEncriptada = enc.encriptar(jtxtNoTarjeta.getText());
            if(!busquedas.agregarTarjeta(noTarjetaEncriptada, this.getUsuarioId()))
                JOptionPane.showMessageDialog(this,"¡No fue posible agregar el numero de tarjeta a la lista! \nContacte al Administradir del Sistema","Mensaje de Error", JOptionPane.ERROR_MESSAGE);
            else
                buscarTarjetas();
        }
    }//GEN-LAST:event_jbtnAgregarActionPerformed

    private void jbtnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRemoverActionPerformed
     if(jlstListaTarjetas.getSelectedIndex()==-1)
     {
         JOptionPane.showMessageDialog(this,"¡Seleccione un Número de Tarjeta de la Lista!","Mensaje de Error", JOptionPane.ERROR_MESSAGE);
         return;
     }
     else
     {
       if(JOptionPane.showConfirmDialog(this, "¿Seguro que desea remover la tarjeta "+jlstListaTarjetas.getSelectedValue().toString()+" \nde la lista de tarjetas no permitidas?", "Mensaje de Confirmación", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
          Vector v = (Vector)listaTarjetas.get(jlstListaTarjetas.getSelectedIndex());
         if(!busquedas.removerTarjeta(Long.parseLong(v.get(0).toString()), this.getUsuarioId()))
             JOptionPane.showMessageDialog(this,"¡No fue posible remover el numero de tarjeta de la lista! \nContacte al Administradir del Sistema","Mensaje de Error", JOptionPane.ERROR_MESSAGE);
         else
             buscarTarjetas();
        }
      }
    }//GEN-LAST:event_jbtnRemoverActionPerformed

    private void jtxtNoTarjetaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtNoTarjetaKeyReleased
    }//GEN-LAST:event_jtxtNoTarjetaKeyReleased

    private void jlstListaTarjetasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jlstListaTarjetasKeyReleased
    }//GEN-LAST:event_jlstListaTarjetasKeyReleased

    private void jtxtNoTarjetaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtNoTarjetaFocusGained
      jlbl_barraEstado.setText("<html> <font color=FF0000>F4</font> Salir | <font color=FF0000>ENTER</font> Agregar Tarjeta | <font color=FF0000>ARRIBA/ABAJO</font> Moverse entre Campos  </html>");
      jtxtNoTarjeta.selectAll();
    }//GEN-LAST:event_jtxtNoTarjetaFocusGained

    private void jlstListaTarjetasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jlstListaTarjetasFocusGained
        jlbl_barraEstado.setText("<html> <font color=FF0000>F4</font> Salir | <font color=FF0000>ENTER</font> Remover Tarjeta | <font color=FF0000>ARRIBA/ABAJO</font> Moverse entre Campos  </html>");
    }//GEN-LAST:event_jlstListaTarjetasFocusGained

    private void jbtnAgregarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jbtnAgregarFocusGained
        jlbl_barraEstado.setText("<html> <font color=FF0000>F4</font> Salir | <font color=FF0000>ENTER</font> Agregar Tarjeta | <font color=FF0000>ARRIBA/ABAJO</font> Moverse entre Campos  </html>");
    }//GEN-LAST:event_jbtnAgregarFocusGained

    private void jbtnRemoverFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jbtnRemoverFocusGained
        jlbl_barraEstado.setText("<html> <font color=FF0000>F4</font> Salir | <font color=FF0000>ENTER</font> Remover Tarjeta | <font color=FF0000>ARRIBA/ABAJO</font> Moverse entre Campos  </html>");
    }//GEN-LAST:event_jbtnRemoverFocusGained

    private void jtxtNoTarjetaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtNoTarjetaKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            jbtnAgregar.doClick();
        if(evt.getKeyCode() == KeyEvent.VK_F4)
            if(JOptionPane.showConfirmDialog(this, "¿Seguro que desea salir de la aplicacion "+jtxtNoTarjeta.getText()+" \na la lista de tarjetas no permitidas?", "Mensaje de Confirmación", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
                this.dispose();
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT || evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN)
            jlstListaTarjetas.requestFocus();
    }//GEN-LAST:event_jtxtNoTarjetaKeyPressed

    private void jlstListaTarjetasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jlstListaTarjetasKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            jbtnRemover.doClick();
        if(evt.getKeyCode() == KeyEvent.VK_F4)
            if(JOptionPane.showConfirmDialog(this, "¿Seguro que desea salir de la aplicacion "+jtxtNoTarjeta.getText()+" \na la lista de tarjetas no permitidas?", "Mensaje de Confirmación", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
                this.dispose();
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT || evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN)
            jtxtNoTarjeta.requestFocus();
    }//GEN-LAST:event_jlstListaTarjetasKeyPressed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        jtxtNoTarjeta.requestFocusInWindow();
    }//GEN-LAST:event_formComponentShown


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnAgregar;
    private javax.swing.JButton jbtnRemover;
    private javax.swing.JLabel jlbl_barraEstado;
    private javax.swing.JList jlstListaTarjetas;
    private javax.swing.JPanel jpnel;
    private tms_TextFields.JNumberTextField jtxtNoTarjeta;
    // End of variables declaration//GEN-END:variables


    private generalFacadeBeanRemote lookupGeneralFacadeBeanRemote() {
        try {
            Context c = new InitialContext();
            return (generalFacadeBeanRemote) c.lookup("tarjetasNoPermitidas.generalFacadeBeanRemote");
        }
        catch(NamingException ne) {
            Logger.getLogger(getClass().getName()).log(Level.SEVERE,"exception caught" ,ne);
            throw new RuntimeException(ne);
        }
    }

    /**
     * @return the usuarioId
     */
    public long getUsuarioId() {
        return usuarioId;
    }

    /**
     * @param usuarioId the usuarioId to set
     */
    public void setUsuarioId(long usuarioId) {
        this.usuarioId = usuarioId;
    }


}
