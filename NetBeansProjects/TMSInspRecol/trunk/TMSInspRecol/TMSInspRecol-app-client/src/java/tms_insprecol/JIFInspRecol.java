/*
 * JIFInspRecol.java
 *
 * Created on 15 de agosto de 2007, 12:16 PM
 */

package tms_insprecol;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import tms_insprecol.util.Jdlg_NumeroUsuario;
import tms_insprecol.util.Jdlg_Pregunta;
import xertmsinsprecol.solicitud.TmsInspRecolFacadeRemote;

/**
 *
 * @author  ocruz
 */
public class JIFInspRecol extends JInternalFrame implements KeyListener{
    
    /**
     * Creates new form JIFInspRecol
     */
    public JIFInspRecol() {
        sesionInspRecolFacate = lookupTmsInspRecolFacade();
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
        xListado.setDataVector(null, encabezado);
        AnchoColumnas();
    }
    
    private TmsInspRecolFacadeRemote lookupTmsInspRecolFacade() {
        try {
            Context c = new InitialContext();
            return (TmsInspRecolFacadeRemote) c.lookup("xertmsinsprecol.solicitud.TmsInspRecolFacadeRemote");
        }
        catch(NamingException ne) {
            Logger.getLogger(getClass().getName()).log(Level.SEVERE,"exception caught" ,ne);
            throw new RuntimeException(ne);
        }
    }
    
    private void AnchoColumnas(){
        TableColumn column = null;
        int anchoContenedor = jScpActualizar.getWidth();
        for (int i = 0; i < 4; i++) {
            column = jTblActualizar.getColumnModel().getColumn(i);
            switch(i){
                case 0: column.setPreferredWidth(Math.round(anchoContenedor*(float)0.15)); break;
                case 1: column.setPreferredWidth(Math.round(anchoContenedor*(float)0.50)); break;
                case 2: column.setPreferredWidth(Math.round(anchoContenedor*(float)0.20)); break;
                case 3: column.setPreferredWidth(Math.round(anchoContenedor*(float)0.15)); break;
            }
            column.setResizable(false);
        }
    }

    private void CerrarIFrame(String mensaje){
        dialogo = new Jdlg_Pregunta("¡Confirme!", mensaje);
        dialogo.setVisible(true);
        int resultado = dialogo.getRespuesta();
        if(resultado == 0) return;
        this.dispose();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScpActualizar = new javax.swing.JScrollPane();
        jTblActualizar = new javax.swing.JTable();
        jBtnActualizar = new javax.swing.JButton();
        jLblCerrar = new javax.swing.JLabel();
        jLblVenta = new javax.swing.JLabel();
        jLblRecol = new javax.swing.JLabel();
        jLblNoVenta = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jBtnBuscar = new javax.swing.JButton();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jScpActualizar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Limites de Efectivo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), java.awt.Color.darkGray));
        jTblActualizar.setFont(new java.awt.Font("Tahoma", 1, 11));
        jTblActualizar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTblActualizar.setModel(xListado);
        jTblActualizar.addKeyListener(this);
        jTblActualizar.getTableHeader().setReorderingAllowed(false);
        jTblActualizar.setDefaultRenderer(Object.class, new TablaRenderer());
        jScpActualizar.setViewportView(jTblActualizar);

        jBtnActualizar.setMnemonic('A');
        jBtnActualizar.setText("Actualizar");
        jBtnActualizar.setName("btnActualizar");
        jBtnActualizar.addKeyListener(this);
        jBtnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnActualizarActionPerformed(evt);
            }
        });

        jLblCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tms_insprecol/images/cerrar.GIF")));
        jLabel1.addKeyListener(this);
        jLblCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLblCerrarMouseClicked(evt);
            }
        });

        jLblVenta.setBackground(new java.awt.Color(255, 255, 255));
        jLblVenta.setOpaque(true);

        jLblRecol.setBackground(java.awt.Color.yellow);
        jLblRecol.setOpaque(true);

        jLblNoVenta.setBackground(java.awt.Color.red);
        jLblNoVenta.setOpaque(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText("Venta");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel2.setText("Recoleccion");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel3.setText("No Venta");

        jBtnBuscar.setMnemonic('n');
        jBtnBuscar.setText("Buscar por Numero de Usuario");
        jBtnBuscar.setName("btnBuscar");
        jBtnBuscar.addKeyListener(this);
        jBtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBuscarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jScpActualizar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLblCerrar)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLblVenta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(15, 15, 15)
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLblRecol, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(14, 14, 14)
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLblNoVenta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 45, Short.MAX_VALUE)
                        .add(jBtnBuscar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jBtnActualizar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLblCerrar)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScpActualizar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jLblVenta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2)
                    .add(jLblRecol, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(jLblNoVenta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jBtnActualizar)
                    .add(jBtnBuscar))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBuscarActionPerformed
// TODO add your handling code here:
        Jdlg_NumeroUsuario dlg = new Jdlg_NumeroUsuario(null, true);
        dlg.setVisible(true);
        if(dlg.getNumeroUsuario().equals("")) return;
        usuarioNumero = dlg.getNumeroUsuario();
        if(!cargaEstadoCajas()){
            lista=null;
            JOptionPane.showInternalMessageDialog(this,"No se encontro al usuario.","¡Aviso!",JOptionPane.ERROR_MESSAGE);
            jBtnActualizar.requestFocusInWindow();
        }
    }//GEN-LAST:event_jBtnBuscarActionPerformed

    private void jBtnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnActualizarActionPerformed
// TODO add your handling code here:
        usuarioNumero="";
        if(!cargaEstadoCajas()){
            lista=null;
            JOptionPane.showInternalMessageDialog(this,"No existen taquillas vendiendo.","¡Aviso!",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnActualizarActionPerformed

    private void jLblCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblCerrarMouseClicked
// TODO add your handling code here:
        if(evt.getButton()==MouseEvent.BUTTON1)
            CerrarIFrame("¿Desea cerrar la aplicación?");
    }//GEN-LAST:event_jLblCerrarMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
// TODO add your handling code here:
        xListado.setDataVector(null, encabezado);
        AnchoColumnas();
        this.jBtnActualizar.requestFocusInWindow(); 
    }//GEN-LAST:event_formComponentShown
        
    private boolean cargaEstadoCajas(){
        boolean bandera=false;
        Vector Lineas=new Vector();
        Lineas = (Vector) sesionInspRecolFacate.obtenerEstadoCajasActivas(terminalNombre, usuarioNumero);
        if(Lineas.size()==0) lista = null;
        else bandera = true;
        
        if(bandera){
            lista = new Object[Lineas.size()][8];
            String fecha;
            Vector subLinea;
            int i, j;
        
            for(i=0; i<Lineas.size(); i++){
                subLinea = (Vector) Lineas.get(i);
                lista[i][0] = subLinea.get(1);
                lista[i][1] = subLinea.get(2);
                if(subLinea.get(6) == null) fecha = "";
                else fecha = formatoFechaHora.format(subLinea.get(6));
                lista[i][2] = fecha;
                lista[i][3] = subLinea.get(7);
                lista[i][4] = subLinea.get(3); // acumulado de venta
                lista[i][5] = subLinea.get(4); // aviso recoleccion
                lista[i][6] = subLinea.get(5); // no permitir venta
                lista[i][7] = subLinea.get(0);
            }
        }
        xListado.setDataVector(lista, encabezado);
        AnchoColumnas();
        jBtnActualizar.requestFocusInWindow();
        
        return bandera;
    }
    
    public void keyTyped(KeyEvent e) {
    }

    public void keyPressed(KeyEvent e) {
        switch(e.getKeyCode()){
            case KeyEvent.VK_F4: CerrarIFrame("¿Desea cerrar la aplicación?");
                break;
            case KeyEvent.VK_ENTER:
                    if(e.getComponent().getName()==null) return;
                    if(e.getComponent().getName().equals("btnActualizar")) jBtnActualizar.doClick();
                    if(e.getComponent().getName().equals("btnBuscar")) jBtnBuscar.doClick();
                break;
        }
    }

    public void keyReleased(KeyEvent e) {
    }
    
    private class TablaRenderer extends DefaultTableCellRenderer{
        private Color BLANCO = new Color(254, 254, 254);
        private Color AMARILLO = new Color(254, 254, 0);
        private Color ROJO = new Color(254, 0, 0);

        public Component getTableCellRendererComponent(JTable table, Object value, boolean selected,
            boolean focused, int row, int column){
            super.getTableCellRendererComponent(table, value, selected, focused, row, column);

            Color bg;
            if(lista==null){
                setBackground(BLANCO);
                return this;
            }
            double accVta = Double.valueOf(lista[row][4].toString());
            double aviRec = Double.valueOf(lista[row][5].toString());
            double LimVta = Double.valueOf(lista[row][6].toString());
            
            bg = (accVta < aviRec ? BLANCO : (accVta<LimVta ? AMARILLO : ROJO));
            setBackground(bg);
            return this;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnActualizar;
    private javax.swing.JButton jBtnBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLblCerrar;
    private javax.swing.JLabel jLblNoVenta;
    private javax.swing.JLabel jLblRecol;
    private javax.swing.JLabel jLblVenta;
    private javax.swing.JScrollPane jScpActualizar;
    private javax.swing.JTable jTblActualizar;
    // End of variables declaration//GEN-END:variables
    private Object[] encabezado = {"Clave Usuario", "Nombre", "Fecha Inicio Sesion", "Terminal"};
    private DefaultTableModel xListado = new DefaultTableModel(null, encabezado){
            public boolean isCellEditable(int row, int col) {
                return false;
            }
    };
    private TmsInspRecolFacadeRemote sesionInspRecolFacate;
    private Jdlg_Pregunta dialogo;
    private SimpleDateFormat formatoFechaHora= new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
    private SimpleDateFormat formatoFecha= new SimpleDateFormat("dd/MM/yyyy");
    private int fila;
    private Object[][] lista;
    
    private String terminalNombre = "CAPU";
    private long usuarioId=282;
    private String usuarioNumero="9003";
}
