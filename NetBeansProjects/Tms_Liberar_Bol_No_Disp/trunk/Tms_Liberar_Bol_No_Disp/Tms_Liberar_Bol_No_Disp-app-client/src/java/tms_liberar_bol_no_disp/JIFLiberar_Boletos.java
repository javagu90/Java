/*
 * JIFLiberar_Boletos.java
 *
 * Created on 7 de diciembre de 2007, 06:38 PM
 */

package tms_liberar_bol_no_disp;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.JRootPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import tmsBolNoDisp.entidad.TmsBoletosNoDisponiblesV;
import tmsBolNoDisp.entidad.TmsCorridasVentaTbl;

/**
 *
 * @author  vgonzalez
 */
public class JIFLiberar_Boletos extends javax.swing.JInternalFrame {
    
    /** Creates new form JIFLiberar_Boletos */
    public JIFLiberar_Boletos() {
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
        jtbl_bolNoDisp.setModel(modeloBolNoDisp);
        jlbl_barraEstado.setText("<html>  <font color=FF0000>F4 </font> Salir de la aplicación | <font color=FF0000>F5 </font> Actualizar | <font color=FF0000>F6 </font> Liberar Asientos | <font color=FF0000>F7 </font> Liberar Todos </html>");        
        jtbl_bolNoDisp.getInputMap(JPanel.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0),"none");
        jtbl_bolNoDisp.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jtbl_bolNoDisp.setAutoResizeMode( JTable.AUTO_RESIZE_OFF );
        jtbl_bolNoDisp.setDefaultRenderer(Object.class, new CustomTableCellRenderer());
        jtbl_bolNoDisp.setRowHeight(25);  
        buscarBoletos();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbl_bolNoDisp = new javax.swing.JTable();
        jlbl_barraEstado = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Asientos no Disponibles", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12)));
        jtbl_bolNoDisp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbl_bolNoDisp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtbl_bolNoDispFocusGained(evt);
            }
        });
        jtbl_bolNoDisp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtbl_bolNoDispKeyPressed(evt);
            }
        });

        jScrollPane1.setViewportView(jtbl_bolNoDisp);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
        );

        jlbl_barraEstado.setFont(new java.awt.Font("Tahoma", 1, 11));
        jlbl_barraEstado.setText("jLabel1");
        jlbl_barraEstado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jlbl_barraEstado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jlbl_barraEstadoFocusGained(evt);
            }
        });
        jlbl_barraEstado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jlbl_barraEstadoKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText("Rev03.08.08");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .add(jlbl_barraEstado, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(655, Short.MAX_VALUE)
                .add(jLabel1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 26, Short.MAX_VALUE)
                .add(jlbl_barraEstado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtbl_bolNoDispFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtbl_bolNoDispFocusGained
        jlbl_barraEstado.setText("<html>  <font color=FF0000>F4 </font> Salir de la aplicación | <font color=FF0000>F5 </font> Actualizar | <font color=FF0000>F6 </font> Liberar Asientos | <font color=FF0000>F7 </font> Liberar Todos </html>");        

    }//GEN-LAST:event_jtbl_bolNoDispFocusGained

    private void jlbl_barraEstadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jlbl_barraEstadoFocusGained
        jlbl_barraEstado.setText("<html>  <font color=FF0000>F4 </font> Salir de la aplicación | <font color=FF0000>F5 </font> Actualizar </html>");        
    }//GEN-LAST:event_jlbl_barraEstadoFocusGained

    private void jlbl_barraEstadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jlbl_barraEstadoKeyPressed
        if(evt.getKeyCode() == evt.VK_F4)
            salirAplicacion();

        if(evt.getKeyCode() == evt.VK_F5)
            buscarBoletos();
        
    }//GEN-LAST:event_jlbl_barraEstadoKeyPressed

    private void jtbl_bolNoDispKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtbl_bolNoDispKeyPressed
        if(evt.getKeyCode() == evt.VK_F4)
            salirAplicacion();

        if(evt.getKeyCode() == evt.VK_F5)
            buscarBoletos();
        
        if(evt.getKeyCode() == evt.VK_F6)
        {
          jdlg_pregunta_SN psn =  new jdlg_pregunta_SN("Desbloquear asiento", "¿Seguro que desea liberar el asiento "+jtbl_bolNoDisp.getValueAt(jtbl_bolNoDisp.getSelectedRow(),5 )+" de la corrida "+jtbl_bolNoDisp.getValueAt(jtbl_bolNoDisp.getSelectedRow(),0)+"?");
          psn.setVisible(true);
          if(respuestaSN)
          {
              eliminarAsientoBloqueado(jtbl_bolNoDisp.getSelectedRow());
                new jdlg_informacion("¡El asiento se liberó correctamente!", "", "Asientos liberado").setVisible(true);
               if(listaAsientos.size()==0)
               {
                    new jdlg_informacion("¡Todos los asientos han sido liberados!", "", "Asientos liberados").setVisible(true);
                    jlbl_barraEstado.requestFocus();
               }
                else
                {
                    jtbl_bolNoDisp.setRowSelectionInterval(0,0);
                    jtbl_bolNoDisp.requestFocus();
                }
          }
          else    
              return;
        }

        
        if(evt.getKeyCode() == evt.VK_F7)
        {
          jdlg_pregunta_SN psn =  new jdlg_pregunta_SN("Desbloquear todos los asientos", "¿Seguro que desea liberar todos los asientos mostrados?");
          psn.setVisible(true);
          if(respuestaSN)
          {
            System.out.println("El numer de boletos a liberar es: "+ jtbl_bolNoDisp.getRowCount());
            int numRows =  jtbl_bolNoDisp.getRowCount();
            for(int i=0; i< numRows;i++)
             {
                System.out.println("manda a eliminar el renglon: "+i);
                eliminarAsientoBloqueado(0);
             }
             new jdlg_informacion("¡Todos los asientos han sido liberados correctamente!", "", "Asientos liberados").setVisible(true);
             jlbl_barraEstado.requestFocus();
          }
          else    
              return;
        }        
    }//GEN-LAST:event_jtbl_bolNoDispKeyPressed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        if(jtbl_bolNoDisp.getRowCount()>0)
            jtbl_bolNoDisp.requestFocusInWindow();
        else
            jlbl_barraEstado.requestFocusInWindow();
    }//GEN-LAST:event_formComponentShown
    
    
    
    private void salirAplicacion(){
          jdlg_pregunta_SN psn =  new jdlg_pregunta_SN("Salir de Desbloqueo de boletos", "¿Seguro que desea salir de la Aplicación de Desbloqueo?");
          psn.setVisible(true);
          if(respuestaSN)
              this.dispose();
    }    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JIFLiberar_Boletos().setVisible(true);
            }
        });
    }
    
    private void buscarBoletos(){
       listaAsientos = ( List<TmsBoletosNoDisponiblesV>)busquedas.boletosNoDisponiblesVFacadeRemote.findAll();
       modeloBolNoDisp.setDataVector(null,encabezadoBolNoDisp);
       if(listaAsientos.size()==0)
       {
           new jdlg_advertencia("¡No hay Asientos bloqueados!","","No hay bloqueos").setVisible(true);
           jlbl_barraEstado.requestFocus();
           return;
       }
       else{
             for(int i=0; i<listaAsientos.size(); i++)
             {
               String[] renglon = new String[10];
               TmsBoletosNoDisponiblesV asiento = null;
               asiento = listaAsientos.get(i);
               renglon[0]= asiento.getFechaCorrida();
               renglon[1]= asiento.getHoraSalida();
               renglon[2]= asiento.getClaveCorrida();
               renglon[3]= asiento.getOrigen();
               renglon[4]= asiento.getDestino();
               renglon[5]= ""+asiento.getNoAsiento();
               renglon[6]= asiento.getEstado();
               renglon[7]= asiento.getUsuarioNombre();
               renglon[8]= formatfc.format(asiento.getFechaCreacion());
               modeloBolNoDisp.addRow(renglon);
             }
          jtbl_bolNoDisp.setRowSelectionInterval(0,0);
          jtbl_bolNoDisp.requestFocus();
       }
                                  // strategy - get max width for cells in column and
                                   // make that the preferred width
           TableColumnModel columnModel = jtbl_bolNoDisp.getColumnModel();
           for (int col=0; col<jtbl_bolNoDisp.getColumnCount(); col++) 
           {
                int maxwidth = 0;            
                for (int row=0; row<jtbl_bolNoDisp.getRowCount(); row++) {
                TableCellRenderer rend  = jtbl_bolNoDisp.getCellRenderer(row, col); 
                           Object value = jtbl_bolNoDisp.getValueAt (row, col); 
                            Component comp = rend.getTableCellRendererComponent (jtbl_bolNoDisp, value, false, false, row, col);
                           maxwidth = Math.max (comp.getPreferredSize().width, maxwidth); 
                } // for row
                TableColumn column = columnModel.getColumn (col);
                TableCellRenderer headerRenderer = column.getHeaderRenderer();
                if (headerRenderer == null)
                            headerRenderer = jtbl_bolNoDisp.getTableHeader().getDefaultRenderer();
                Object headerValue = column.getHeaderValue();
                Component headerComp = headerRenderer.getTableCellRendererComponent (jtbl_bolNoDisp, headerValue, false, false, 0, col);
                maxwidth = Math.max (maxwidth, headerComp.getPreferredSize().width);
                column.setPreferredWidth (maxwidth + 10);
           } // for col         
    }

    private void eliminarAsientoBloqueado(int pnum) {
        int rowSel = pnum;
            if(rowSel>=0)
            {
               TmsBoletosNoDisponiblesV asiento = null;
               asiento = listaAsientos.get(rowSel);
               System.out.println("El asiento a liberar es: "+asiento.getBolNoDipId());
               TmsCorridasVentaTbl corrida = busquedas.corridasVentaTblFacadeRemote.find(BigDecimal.valueOf(asiento.getCorridaId()));
               System.out.println("La corrida es: "+corrida.getClaveCorrida());
               int num = Integer.valueOf(""+asiento.getNoAsiento());
               switch(num){
                   case 1:corrida.setAsiento1("D");break;
                   case 2:corrida.setAsiento2("D");break;
                   case 3:corrida.setAsiento3("D");break;
                   case 4:corrida.setAsiento4("D");break;
                   case 5:corrida.setAsiento5("D");break;
                   case 6:corrida.setAsiento6("D");break;
                   case 7:corrida.setAsiento7("D");break;
                   case 8:corrida.setAsiento8("D");break;
                   case 9:corrida.setAsiento9("D");break;
                   case 10:corrida.setAsiento10("D");break;
                   case 11:corrida.setAsiento11("D");break;
                   case 12:corrida.setAsiento12("D");break;
                   case 13:corrida.setAsiento13("D");break;
                   case 14:corrida.setAsiento14("D");break;
                   case 15:corrida.setAsiento15("D");break;
                   case 16:corrida.setAsiento16("D");break;
                   case 17:corrida.setAsiento17("D");break;
                   case 18:corrida.setAsiento18("D");break;
                   case 19:corrida.setAsiento19("D");break;
                   case 20:corrida.setAsiento20("D");break;
                   case 21:corrida.setAsiento21("D");break;
                   case 22:corrida.setAsiento22("D");break;
                   case 23:corrida.setAsiento23("D");break;
                   case 24:corrida.setAsiento24("D");break;
                   case 25:corrida.setAsiento25("D");break;
                   case 26:corrida.setAsiento26("D");break;
                   case 27:corrida.setAsiento27("D");break;
                   case 28:corrida.setAsiento28("D");break;
                   case 29:corrida.setAsiento29("D");break;
                   case 30:corrida.setAsiento30("D");break;
                   case 31:corrida.setAsiento31("D");break;
                   case 32:corrida.setAsiento32("D");break;
                   case 33:corrida.setAsiento33("D");break;
                   case 34:corrida.setAsiento34("D");break;
                   case 35:corrida.setAsiento35("D");break;
                   case 36:corrida.setAsiento36("D");break;
                   case 37:corrida.setAsiento37("D");break;
                   case 38:corrida.setAsiento38("D");break;
                   case 39:corrida.setAsiento39("D");break;
                   case 40:corrida.setAsiento40("D");break;
                   case 41:corrida.setAsiento41("D");break;
                   case 42:corrida.setAsiento42("D");break;
                   case 43:corrida.setAsiento43("D");break;
                   case 44:corrida.setAsiento44("D");break;
                   case 45:corrida.setAsiento45("D");break;
                   case 46:corrida.setAsiento46("D");break;
                   case 47:corrida.setAsiento47("D");break;
                   case 48:corrida.setAsiento48("D");break;
                   case 49:corrida.setAsiento49("D");break;
                   case 50:corrida.setAsiento50("D");break;
                   case 51:corrida.setAsiento51("D");break;
                   case 52:corrida.setAsiento52("D");break;
                   case 53:corrida.setAsiento53("D");break;
                   case 54:corrida.setAsiento54("D");break;
                   case 55:corrida.setAsiento55("D");break;
                   case 56:corrida.setAsiento56("D");break;
                   case 57:corrida.setAsiento57("D");break;
                   case 58:corrida.setAsiento58("D");break;
                   case 59:corrida.setAsiento59("D");break;
                   case 60:corrida.setAsiento60("D");break;
                   case 61:corrida.setAsiento61("D");break;
                   case 62:corrida.setAsiento62("D");break;
                   case 63:corrida.setAsiento63("D");break;
                   case 64:corrida.setAsiento64("D");break;
                   case 65:corrida.setAsiento65("D");break;
                   case 66:corrida.setAsiento66("D");break;
                   case 67:corrida.setAsiento67("D");break;
                   case 68:corrida.setAsiento68("D");break;
                   case 69:corrida.setAsiento69("D");break;
                   case 70:corrida.setAsiento70("D");break;
                   case 71:corrida.setAsiento71("D");break;
                   case 72:corrida.setAsiento72("D");break;
                   case 73:corrida.setAsiento73("D");break;
                   case 74:corrida.setAsiento74("D");break;
                   case 75:corrida.setAsiento75("D");break;
                   case 76:corrida.setAsiento76("D");break;
                   case 77:corrida.setAsiento77("D");break;
                   case 78:corrida.setAsiento78("D");break;
                   case 79:corrida.setAsiento79("D");break;
                   case 80:corrida.setAsiento80("D");break;
                   case 81:corrida.setAsiento81("D");break;
                   case 82:corrida.setAsiento82("D");break;
                   case 83:corrida.setAsiento83("D");break;
                   case 84:corrida.setAsiento84("D");break;
                   case 85:corrida.setAsiento85("D");break;
               }
               busquedas.corridasVentaTblFacadeRemote.edit(corrida);
               modeloBolNoDisp.removeRow(rowSel);
               jtbl_bolNoDisp.repaint();
               busquedas.boletosNoDisponiblesVFacadeRemote.destroy(asiento);
               listaAsientos.remove(rowSel);
            }
            else
                new jdlg_error("¡Debes seleccionar un asiento para liberarlo!","","Noy asiento seleccionado").setVisible(true);
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlbl_barraEstado;
    private javax.swing.JTable jtbl_bolNoDisp;
    // End of variables declaration//GEN-END:variables
    private TmsLiberarBoletosManagedBean busquedas = new TmsLiberarBoletosManagedBean();
    private Object[] encabezadoBolNoDisp = {"Fecha Corrida","Hora Salida","Clave Corrida","Origen","Destino","Asiento","Estado","Usuario","Fecha Creación"};
    private Object[][] ocupacionSistema;
    private DefaultTableModel modeloBolNoDisp = new DefaultTableModel(null,encabezadoBolNoDisp){public boolean isCellEditable (int row, int column){if (column == 20)return true; return false; } };
    private  List<TmsBoletosNoDisponiblesV> listaAsientos;
    private SimpleDateFormat formatfc = new SimpleDateFormat ("dd/MM/yyyy HH:mm");
    private SimpleDateFormat formathc = new SimpleDateFormat ("HH:mm");
    private boolean respuestaSN = false;

    
    
    //// C L A S E S
class jdlg_pregunta_SN extends javax.swing.JDialog {
    
    /**
     * Creates new form jdlg_pregunta_SN
     */
    public jdlg_pregunta_SN(String titulo, String pregunta){
        this.setTitle(titulo);
        this.setModal(true);
        this.setDefaultLookAndFeelDecorated(true);
        this.setUndecorated(true);
        this.getRootPane().setWindowDecorationStyle(JRootPane.QUESTION_DIALOG);
        this.setAlwaysOnTop(true);
        initComponents();
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);        
        this.setResizable(false);
        jlbl_mensaje.setText(pregunta);
        jlbl_barraEstado.setText("<html>  <font color=FF0000>ENTER: </font> Si                 <font color=FF0000>             ESC: </font> No  </html>");
        jlbl_barraEstado.setHorizontalAlignment( JTextField.CENTER );
        int nletras = pregunta.length();
        this.setSize((nletras * 6) + 80,150);
            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
            Dimension DilaogSize = this.getSize();
            if (DilaogSize.height > screenSize.height) {
                DilaogSize.height = screenSize.height;
            }
            if (DilaogSize.width > screenSize.width) {
                DilaogSize.width = screenSize.width;
            }
            this.setLocation( ( screenSize.width - DilaogSize.width ) / 2, ( screenSize.height - DilaogSize.height ) / 2 );            this.setDefaultLookAndFeelDecorated(true);
            //this.setUndecorated(true);
            this.getRootPane().setWindowDecorationStyle(JRootPane.QUESTION_DIALOG);
            jlbl_mensaje.requestFocus();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">                          
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        jlbl_barraEstado = new javax.swing.JLabel();
        jlbl_mensaje = new javax.swing.JLabel();
        jlbl_mensaje.setFocusTraversalKeysEnabled(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\NetBeansProyects\\TMSRecaudacion\\TMSRecaudacion-app-client\\src\\java\\tmsrecaudacion\\images\\pregunta.gif"));

        jlbl_barraEstado.setFont(new java.awt.Font("Tahoma", 1, 12));
        jlbl_barraEstado.setForeground(Color.BLACK);
        jlbl_barraEstado.setText(" ENTER: Si                ESC: No");
        jlbl_barraEstado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jlbl_mensaje.setFont(new java.awt.Font("Arial", 1, 12));
        jlbl_mensaje.setText("sdfsdsdfsdfsdfsdfsdf");
        jlbl_mensaje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jlbl_mensajeKeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .add(14, 14, 14)
                .add(jlbl_mensaje, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                .add(424, 424, 424))
            .add(jlbl_barraEstado, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlbl_mensaje))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 59, Short.MAX_VALUE)
                .add(jlbl_barraEstado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        pack();
    }// </editor-fold>                           

    private void jlbl_mensajeKeyPressed(java.awt.event.KeyEvent evt) {                                        
      if(evt.getKeyCode() == evt.VK_ESCAPE)
      {
          respuestaSN = false;
          this.dispose();
      }
      if(evt.getKeyCode() == evt.VK_ENTER)
      {
          respuestaSN = true;
          this.dispose();
      }
      
    }                                       
    
    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jlbl_barraEstado;
    private javax.swing.JLabel jlbl_mensaje;
    
    // End of variables declaration                   
    
}        

public class CustomTableCellRenderer extends DefaultTableCellRenderer{
    public Component getTableCellRendererComponent (JTable table,Object obj, boolean isSelected, boolean hasFocus, int row, int column) {
        Component cell = super.getTableCellRendererComponent(table, obj, isSelected, hasFocus, row, column);
        if (isSelected) {
            cell.setBackground(new Color(0,175,255));
            cell.setForeground(Color.WHITE);
        } 
        else {
            cell.setForeground(Color.BLACK);
            if (row % 2 == 0) {
                cell.setBackground(new Color(217,229,241));
            }
            else {
                cell.setBackground(Color.WHITE);
            }
        }
        //if(column == 7)
        //    setHorizontalAlignment(JTextField.CENTER);
        //else
            setHorizontalAlignment(JTextField.LEFT);
        return cell;
    }}
}
