/*
 * JDlgCorteFinDia.java
 *
 * Created on 21 de agosto de 2007, 06:42 PM
 */

package tms_cortesterminal.util;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import tms_TextFields.JDateTextField;

/**
 *
 * @author  ocruz
 */
public class JDlgCorteFinDia extends javax.swing.JDialog implements KeyListener{
    
    /**
     * Creates new form JDlgCorteFinDia
     */
    public JDlgCorteFinDia(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        centrar();
    }
    
    private void centrar(){
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension DialogSize = this.getSize();
        if (DialogSize.height > screenSize.height) {
            DialogSize.height = screenSize.height;
        }
        if (DialogSize.width > screenSize.width) {
            DialogSize.width = screenSize.width;
        }
        this.setLocation( ( screenSize.width - DialogSize.width ) / 2, ( screenSize.height - DialogSize.height ) / 2 );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        JTxtFecha = JTxtFecha = new JDateTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Ingrese Fecha de Corte Alt+F");
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        JTxtFecha.setFont(new java.awt.Font("Tahoma", 1, 11));
        JTxtFecha.setName("txtfecha");
        JTxtFecha.addKeyListener(this);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText("<html><font color=ff0000>ENTER</font> Imprimir corte de dia | <font color=ff0000>ESC</font> Cancelar</html>");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(JTxtFecha, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 141, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(105, Short.MAX_VALUE))
            .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(JTxtFecha, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel1))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CorteDia(){
        fecha=getPFecha(JTxtFecha.getText());
        if(fecha.equals("")) return;
        JTxtFecha.setText(fecha);
        this.dispose();
    }
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
// TODO add your handling code here:
        JTxtFecha.setText(formatoFecha.format(new Date()));
        JTxtFecha.requestFocusInWindow();
    }//GEN-LAST:event_formComponentShown

    private String getPFecha(String aux){
        String xfecha=aux;
        if(xfecha.equals("") || xfecha.length()==1 || xfecha.length()==4 || (xfecha.length()>6 &&  xfecha.length()<10)){
            DialogoAceptar.mostrarDialogo("¡Importante!", "Escriba una fecha válida.", Color.RED);
            JTxtFecha.setText(formatoFecha.format(new Date().getTime()));
            JTxtFecha.requestFocusInWindow();
            return "";
        }
        
        if(xfecha.length()==2 || xfecha.length()==3){
            String dtStrFecha = formatoFecha.format(new Date()).substring(3);
            if(xfecha.length()==2) xfecha = xfecha +"/"+dtStrFecha;
            else xfecha = xfecha+dtStrFecha;
            return xfecha;
        }
        
        if(xfecha.length()==5 || xfecha.length()==6){
            String dtStrFecha = formatoFecha.format(new Date()).substring(6);
            if(xfecha.length()==5) xfecha = xfecha +"/"+dtStrFecha;
            else xfecha = xfecha+dtStrFecha;
            return xfecha;
        }
        
        return aux;
    }
    public void keyTyped(KeyEvent e) {
    }

    public void keyPressed(KeyEvent e) {
        switch(e.getKeyCode()){
            case KeyEvent.VK_ESCAPE: 
                    fecha="";
                    this.dispose();
                break;
            case KeyEvent.VK_ENTER:
                if(e.getComponent().getName().equals("txtfecha")){
                    fecha=getPFecha(JTxtFecha.getText());
                    if(fecha.equals("")) return;
                    Date dtHoy = new Date();
                    Date dtFecha=null;
                    try {
                        dtFecha = formatoFecha.parse(fecha);
                    } catch (ParseException ex) {
                        ;
                    }
                    if(dtFecha == null){
                        DialogoAceptar.mostrarDialogo("¡Importante!", "Escriba una fecha válida.", Color.RED);
                        JTxtFecha.setText(formatoFecha.format(dtHoy.getTime()));
                        JTxtFecha.requestFocusInWindow();
                        return;
                    }
                    
                    if(dtFecha.getTime()>dtHoy.getTime()){
                        DialogoAceptar.mostrarDialogo("¡Importante!", "Ingrese fecha actual o anterior.", Color.RED);
                        JTxtFecha.setText(formatoFecha.format(dtHoy.getTime()));
                        JTxtFecha.requestFocusInWindow();
                        return;
                    }
                    JTxtFecha.setText(fecha);
                    //CorteDia();
                    this.dispose();
                }
                break;
        }
    }

    public void keyReleased(KeyEvent e) {
    }
    
    public String getFecha(){
        return fecha;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTxtFecha;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    private SimpleDateFormat formatoFecha= new SimpleDateFormat("dd/MM/yyyy");
    private String fecha="";

    private JDlgAceptar DialogoAceptar=new JDlgAceptar();
}
