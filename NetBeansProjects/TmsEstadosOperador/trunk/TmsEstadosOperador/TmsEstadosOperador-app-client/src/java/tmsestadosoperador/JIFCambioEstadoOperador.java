/*
 * JIFCambioEstadoOperador.java
 *
 * Created on 9 de diciembre de 2007, 04:20 PM
 */

package tmsestadosoperador;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.beans.PropertyVetoException;
import java.math.BigInteger;
import java.sql.Timestamp;
import java.util.List;
import java.util.Vector;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.JRootPane;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;
import tmsedosoperador.entidad.TmsAccionesTbl;
import tmsedosoperador.entidad.TmsOperadoresTbl;

/**
 *
 * @author  vgonzalez
 */
public class JIFCambioEstadoOperador extends javax.swing.JInternalFrame {//javax.swing.JFrame { //
    
    /** Creates new form JIFCambioEstadoOperador */
    public JIFCambioEstadoOperador(Vector pDatosIniciales) {
        this.datosIniciales = pDatosIniciales;
        this.setIdmenu(Long.valueOf(datosIniciales.get(4).toString()));
        this.setIdusuario(Long.valueOf(datosIniciales.get(0).toString()));
        this.nombre_recaudador = datosIniciales.get(2).toString();
        this.setSesionId(datosIniciales.get(3).toString());
        initComponents();
        //((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
	this.setTitle("Estado Operador   Rev29.05.08");
        jtbl_operadores.setModel(modeloOperadores);
        jtbl_operadores.getInputMap(JPanel.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0),"none");
        jtxt_operador.setFocusTraversalKeysEnabled(false);
        jcmbx_act2.setFocusTraversalKeysEnabled(false);
        jcmbx_act3.setFocusTraversalKeysEnabled(false);
        jcmbx_act2.registerKeyboardAction( new ActionListener() { public void actionPerformed(ActionEvent e) { ; }},KeyStroke.getKeyStroke(KeyEvent.VK_F10, 0),JComponent.WHEN_FOCUSED);
        jcmbx_act3.registerKeyboardAction( new ActionListener() { public void actionPerformed(ActionEvent e) { ; }},KeyStroke.getKeyStroke(KeyEvent.VK_F10, 0),JComponent.WHEN_FOCUSED);
        //this.registerKeyboardAction( new ActionListener() { public void actionPerformed(ActionEvent e) { ; }},KeyStroke.getKeyStroke(KeyEvent.VK_F10, 0),JComponent.WHEN_FOCUSED);
        listAcc2 = busquedas.accionesTblFacadeRemote.buscarPorComponente( BigInteger.valueOf(Long.valueOf("1")),BigInteger.valueOf(Long.valueOf("1")) );
        listAcc3 = busquedas.accionesTblFacadeRemote.buscarPorComponente( BigInteger.valueOf(Long.valueOf("2")),BigInteger.valueOf(Long.valueOf("3")) );
        jcmbx_act2.removeAllItems();
        for(int i=0; i<listAcc2.size(); i++)
        {
          TmsAccionesTbl accion = listAcc2.get(i);
          jcmbx_act2.addItem(accion.getAccion());
        }
        jcmbx_act3.removeAllItems();
        for(int i=0; i<listAcc3.size(); i++)
        {
          TmsAccionesTbl accion = listAcc3.get(i);
          jcmbx_act3.addItem(accion.getAccion());
        }
        jlbl_barraEstado.setText("<html>  <font color=FF0000>F4 </font> Salir de la aplicación | <font color=FF0000> Enter </font> Buscar Operadores | <font color=FF0000>CTRL+2</font> Minimizar ventana | <font color=FF0000>CTRL+1</font> Mostrar siguiente ventana</html>");
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtxt_operador = new javax.swing.JTextField();
        jpnl_operadores = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbl_operadores = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jtxt_act1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jcmbx_act2 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jcmbx_act3 = new javax.swing.JComboBox();
        jlbl_barraEstado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Cambio Estado Operador");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cambi de Estado de Operadores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12)));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Clave Operador:");

        jtxt_operador.setText("%");
        jtxt_operador.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxt_operadorFocusGained(evt);
            }
        });
        jtxt_operador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxt_operadorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxt_operadorKeyReleased(evt);
            }
        });

        jpnl_operadores.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Operadores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12)));
        jtbl_operadores.setFont(new java.awt.Font("Tahoma", 1, 12));
        jtbl_operadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbl_operadores.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtbl_operadoresFocusGained(evt);
            }
        });
        jtbl_operadores.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtbl_operadoresKeyReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jtbl_operadores);

        org.jdesktop.layout.GroupLayout jpnl_operadoresLayout = new org.jdesktop.layout.GroupLayout(jpnl_operadores);
        jpnl_operadores.setLayout(jpnl_operadoresLayout);
        jpnl_operadoresLayout.setHorizontalGroup(
            jpnl_operadoresLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpnl_operadoresLayout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                .add(10, 10, 10))
        );
        jpnl_operadoresLayout.setVerticalGroup(
            jpnl_operadoresLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpnl_operadoresLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Estados Operador", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12)));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel3.setText("Estado General:");

        jtxt_act1.setEditable(false);
        jtxt_act1.setFocusable(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel4.setText("Ubicaci\u00f3n:");

        jcmbx_act2.setEnabled(false);
        jcmbx_act2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jcmbx_act2FocusGained(evt);
            }
        });
        jcmbx_act2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcmbx_act2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jcmbx_act2KeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel5.setText("Actividad:");

        jcmbx_act3.setEnabled(false);
        jcmbx_act3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcmbx_act3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jcmbx_act3KeyReleased(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(32, 32, 32)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel5)
                    .add(jLabel4)
                    .add(jLabel3))
                .add(14, 14, 14)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jcmbx_act3, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jcmbx_act2, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jtxt_act1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 241, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jtxt_act1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(24, 24, 24)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jcmbx_act2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(24, 24, 24)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(jcmbx_act3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jpnl_operadores, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                        .add(jLabel1)
                        .add(16, 16, 16)
                        .add(jtxt_operador, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jtxt_operador, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(16, 16, 16)
                .add(jpnl_operadores, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jlbl_barraEstado.setFont(new java.awt.Font("Tahoma", 1, 12));
        jlbl_barraEstado.setText("jLabel2");
        jlbl_barraEstado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jlbl_barraEstado, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(24, 24, 24)
                .add(jlbl_barraEstado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxt_operadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxt_operadorKeyReleased
        if(evt.getKeyCode()== evt.VK_ENTER)
        {
            String clv = "%";
            if(!jtxt_operador.getText().equals(""))
                clv =  jtxt_operador.getText();
            if(clv.equals("%"))
                listadoOperadores = busquedas.operadoresTblFacadeRemote.findAll();
            else
                listadoOperadores = busquedas.operadoresTblFacadeRemote.findByClaveOperador(clv);
            
            if(listadoOperadores.size()==0)
            {
               new jdlg_advertencia("¡No hay operadores que coincidan con los criterios de la busqueda!","","No hay operadores").setVisible(true);
               return;
            }
            for(int i=0; i<listadoOperadores.size(); i++)
            {
                TmsOperadoresTbl oper = listadoOperadores.get(i);
                String[] renglon = new String[3];
                renglon[0] = oper.getClaveOperador();
                renglon[1] = oper.getOperadorNombreCompleto();
                modeloOperadores.addRow(renglon);
            }
            jtxt_operador.setEnabled(false);
            jtbl_operadores.requestFocus();
            jtbl_operadores.setRowSelectionInterval(0,0);
            jtbl_operadores.setColumnSelectionInterval(0,0);
        }

        if(evt.getKeyCode() == evt.VK_1 && evt.isControlDown()){
            setEventoTeclado(evt);
            try {this.setIcon(true);} catch (PropertyVetoException ex) { ; }
            return;
        }
        
        if(evt.getKeyCode() == evt.VK_2 && evt.isControlDown()){
            try {this.setIcon(true);} catch (PropertyVetoException ex) { ; }
            return;
        }
        
        if(evt.getKeyCode() == evt.VK_F4)
            salirAplicacion();

        
    }//GEN-LAST:event_jtxt_operadorKeyReleased

    private void jcmbx_act3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcmbx_act3KeyReleased
     if(evt.getKeyCode()== evt.VK_ESCAPE)     
     {  
         jtxt_act1.setText("");
         jcmbx_act2.setSelectedIndex(0);
         jcmbx_act3.setSelectedIndex(0);
         jcmbx_act2.setEnabled(false);
         jcmbx_act3.setEnabled(false);
         jtbl_operadores.setEnabled(true);
         jtbl_operadores.requestFocus();
     }
     
     if(evt.getKeyCode()== evt.VK_LEFT || evt.getKeyCode()== evt.VK_RIGHT)
     {
         if(jcmbx_act3.getSelectedItem().toString().equals("GUARDIA") || jcmbx_act3.getSelectedItem().toString().equals("ESTANCIA")  || jcmbx_act3.getSelectedItem().toString().equals("CORRIDA"))
             jtxt_act1.setText("ENROLADO");
         else
             jtxt_act1.setText("FUERA DE ROL");
         jcmbx_act2.requestFocus();
     }
     
     if(evt.getKeyCode()== evt.VK_F10)
     {
         if(jcmbx_act3.getSelectedItem().toString().equals("GUARDIA") || jcmbx_act3.getSelectedItem().toString().equals("ESTANCIA")  || jcmbx_act3.getSelectedItem().toString().equals("CORRIDA"))
             jtxt_act1.setText("ENROLADO");
         else
             jtxt_act1.setText("FUERA DE ROL");
         guadarEstado();
     }  
    }//GEN-LAST:event_jcmbx_act3KeyReleased

    private void jcmbx_act2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcmbx_act2KeyReleased
     if(evt.getKeyCode()== evt.VK_ESCAPE)     
     {  
         jtxt_act1.setText("");
         jcmbx_act2.setSelectedIndex(0);
         jcmbx_act3.setSelectedIndex(0);
         jcmbx_act2.setEnabled(false);
         jcmbx_act3.setEnabled(false);
         jtbl_operadores.setEnabled(true);
         jtbl_operadores.requestFocus();
     }
     
     if(evt.getKeyCode()== evt.VK_LEFT || evt.getKeyCode()== evt.VK_RIGHT)
     {
         if(jcmbx_act3.getSelectedItem().toString().equals("GUARDIA") || jcmbx_act3.getSelectedItem().toString().equals("ESTANCIA")  || jcmbx_act3.getSelectedItem().toString().equals("CORRIDA"))
             jtxt_act1.setText("ENROLADO");
         else
             jtxt_act1.setText("FUERA DE ROL");
         jcmbx_act3.requestFocus();
     }
     
     if(evt.getKeyCode()== evt.VK_F10)
     {
         if(jcmbx_act3.getSelectedItem().toString().equals("GUARDIA") || jcmbx_act3.getSelectedItem().toString().equals("ESTANCIA")  || jcmbx_act3.getSelectedItem().toString().equals("CORRIDA"))
             jtxt_act1.setText("ENROLADO");
         else
             jtxt_act1.setText("FUERA DE ROL");
         guadarEstado();
     }
    }//GEN-LAST:event_jcmbx_act2KeyReleased

    private void jcmbx_act3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcmbx_act3KeyPressed
     
    }//GEN-LAST:event_jcmbx_act3KeyPressed

    private void jcmbx_act2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcmbx_act2KeyPressed

    }//GEN-LAST:event_jcmbx_act2KeyPressed

    private void jtbl_operadoresKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtbl_operadoresKeyReleased
     if(evt.getKeyCode()== evt.VK_ENTER)
     {
         TmsOperadoresTbl opersel = listadoOperadores.get(jtbl_operadores.getSelectedRow());
         jtxt_act1.setText(opersel.getAccion1Id().getAccion());
         jcmbx_act2.setSelectedItem(opersel.getAccion2Id().getAccion());
         jcmbx_act3.setSelectedItem(opersel.getAccion3Id().getAccion());
         jtbl_operadores.setEnabled(false);
         jcmbx_act2.setEnabled(true);
         jcmbx_act3.setEnabled(true);
         jcmbx_act2.requestFocus();
     }
     
      if(evt.getKeyCode()== evt.VK_UP || evt.getKeyCode()== evt.VK_DOWN){
         TmsOperadoresTbl opersel = listadoOperadores.get(jtbl_operadores.getSelectedRow());
         jtxt_act1.setText(opersel.getAccion1Id().getAccion());
         jcmbx_act2.setSelectedItem(opersel.getAccion2Id().getAccion());
         jcmbx_act3.setSelectedItem(opersel.getAccion3Id().getAccion());
         //if(jcmbx_act3.getSelectedItem().toString().equals("GUARDIA") || jcmbx_act3.getSelectedItem().toString().equals("ESTANCIA")  || jcmbx_act3.getSelectedItem().toString().equals("CORRIDA"))
         //    jtxt_act1.setText("ENROLADO");
         //else
         //    jtxt_act1.setText("FUERA DE ROL");
      }
        
    if(evt.getKeyCode()== evt.VK_ESCAPE)     
    {
         modeloOperadores.setDataVector(null,encabezadoOperadores);
         jtxt_operador.setEnabled(true);
         jtxt_operador.setText("%");
         jtxt_operador.requestFocus();
         
    }
    }//GEN-LAST:event_jtbl_operadoresKeyReleased

    private void jtxt_operadorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxt_operadorKeyPressed
        
    }//GEN-LAST:event_jtxt_operadorKeyPressed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        jtxt_operador.requestFocusInWindow();
    }//GEN-LAST:event_formComponentShown

    public void setFoco(){
        if(jtbl_operadores.getRowCount()>0){
            jtbl_operadores.requestFocus();
            return;
        }
        jtxt_operador.requestFocusInWindow();
    }
    
    private void jcmbx_act2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jcmbx_act2FocusGained
      jlbl_barraEstado.setText("<html>  <font color=FF0000>ESC </font> Seleccionar otro operador | <font color=FF0000> « » </font> Desplazarse entre campos | <font color=FF0000> F10 </font> Guardar </html>");        
    }//GEN-LAST:event_jcmbx_act2FocusGained

    private void jtbl_operadoresFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtbl_operadoresFocusGained
        jlbl_barraEstado.setText("<html>  <font color=FF0000>ESC </font> Busqueda de Operadores | <font color=FF0000> ARRIBA/ABAJO </font> Desplazarse entre operadores | <font color=FF0000> Enter </font> Seleccionar Operador para cambiar de estado </html>");
    }//GEN-LAST:event_jtbl_operadoresFocusGained

    private void jtxt_operadorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxt_operadorFocusGained
        jlbl_barraEstado.setText("<html>  <font color=FF0000>F4 </font> Salir de la aplicación | <font color=FF0000> Enter </font> Buscar Operadores | <font color=FF0000>CTRL+2</font> Minimizar ventana | <font color=FF0000>CTRL+1</font> Mostrar siguiente ventana</html>");
    }//GEN-LAST:event_jtxt_operadorFocusGained
    
    
    private void salirAplicacion(){
          jdlg_pregunta_SN psn =  new jdlg_pregunta_SN("Confirmacion de salida", "¿Seguro que desea salir de cambios de estado de Operadores?");
          psn.setVisible(true);
          if(respuestaSN)
              this.dispose();
          else
            return;  
    }    

    private void guadarEstado() {
          jdlg_pregunta_SN psn =  new jdlg_pregunta_SN("Confirmacion de guardar", "¿Seguro que desea guardar el cambio de estado del Operador "+jtbl_operadores.getValueAt(jtbl_operadores.getSelectedRow(),0).toString()+"?");
          psn.setVisible(true);
          if(!respuestaSN)
             return;
         TmsOperadoresTbl operadorEditado = listadoOperadores.get(jtbl_operadores.getSelectedRow());
         TmsAccionesTbl tmsacc1 = busquedas.accionesTblFacadeRemote.buscarPorAccion(jtxt_act1.getText());
         if(tmsacc1==null)
             new jdlg_advertencia("¡La Acción "+jtbl_operadores.getSelectedRow()+" del operador esta mal configurada! ","Favor de contactar al Administrador del Sistema","Error de configuración").setVisible(true);
         else
             operadorEditado.setAccion1Id(tmsacc1);
         Vector x = (Vector) busquedas.operadoresTblFacadeRemote.fechaServidor();
         fecha_servidor = fecha_servidor.valueOf(x.get(0).toString());
         TmsAccionesTbl tmsacc2 = listAcc2.get(jcmbx_act2.getSelectedIndex());
         TmsAccionesTbl tmsacc3 = listAcc3.get(jcmbx_act3.getSelectedIndex());
         operadorEditado.setAccion2Id(tmsacc2);
         operadorEditado.setAccion3Id(tmsacc3);
         operadorEditado.setUltimaActualizacionPor(BigInteger.valueOf(getIdusuario()));
         operadorEditado.setUltimaFechaActualizacion(fecha_servidor);
         Vector NESP = (Vector)busquedas.operadoresTblFacadeRemote.queryBuscaNombreEsquema();
         String nombreEsquema = NESP.get(0).toString();          
         operadorEditado.setReplicacionOrigen(nombreEsquema);
         busquedas.operadoresTblFacadeRemote.edit(operadorEditado);
         nombreEsquema = NESP.get(0).toString();
         boolean resultado = busquedas.operadoresTblFacadeRemote.ejecutaReplicacion("TMS_OPERADORES_TBL",operadorEditado.getOperadorId().toString(),nombreEsquema,"DIFUSION");
         new jdlg_informacion("¡El cambio de estado del operador se realiza satisfactoriamente!","","Cambio de estado completado").setVisible(true);
         jtxt_act1.setText("");
         jcmbx_act2.setSelectedIndex(0);
         jcmbx_act3.setSelectedIndex(0);
         jcmbx_act2.setEnabled(false);
         jcmbx_act3.setEnabled(false);
         jtbl_operadores.setEnabled(true);
         //jtbl_operadores.requestFocus();
         modeloOperadores.setDataVector(null,encabezadoOperadores);
         jtxt_operador.setEnabled(true);
         jtxt_operador.setText("%");
         jtxt_operador.requestFocus();
     }

    public void setIdusuario(long id) {
        this.idusuario = id;
    }
        
    public long getIdusuario(){
      return   idusuario;
    }

    public long getIdmenu() {
        return idmenu;
    }

    public void setIdmenu(long idmenu) {
        this.idmenu = idmenu;
    }
    
    public long getSesionId() {
        return sesionId;
    }

    public void setSesionId(String sesionId) {
        this.sesionId = Long.valueOf(sesionId);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcmbx_act2;
    private javax.swing.JComboBox jcmbx_act3;
    private javax.swing.JLabel jlbl_barraEstado;
    private javax.swing.JPanel jpnl_operadores;
    private javax.swing.JTable jtbl_operadores;
    private javax.swing.JTextField jtxt_act1;
    private javax.swing.JTextField jtxt_operador;
    // End of variables declaration//GEN-END:variables
    private long sesionId = 1;
    private long idusuario = 999;
    private long idmenu = 0;
    private Object[] encabezadoOperadores = {"Clave","Nombre"};
    private DefaultTableModel modeloOperadores = new DefaultTableModel(null,encabezadoOperadores){
    public boolean isCellEditable (int row, int column){if (column == 10) return true; return false;}};
    private boolean respuestaSN = true;
    private  TmsCambioEstadoOperadorManagedBean busquedas = new TmsCambioEstadoOperadorManagedBean();
    private List<TmsOperadoresTbl> listadoOperadores;
    private List<TmsAccionesTbl>  listAcc2;
    private List<TmsAccionesTbl>  listAcc3;
    private Vector datosIniciales;
    private Timestamp fecha_servidor;
    private String nombre_recaudador;

    ////// CLASES ///////////
    class jdlg_pregunta_SN extends javax.swing.JDialog {
    
    /**
     * Creates new form jdlg_pregunta_SN
     */
    public jdlg_pregunta_SN(String titulo, String pregunta){
        this.setTitle(titulo);
        this.setModal(true);
        this.setDefaultLookAndFeelDecorated(true);
        this.setUndecorated(true);
        this.getRootPane().setWindowDecorationStyle(JRootPane.QUESTION_DIALOG);
        this.setAlwaysOnTop(true);
        initComponents();
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);        
        this.setResizable(false);
        jlbl_mensaje.setText(pregunta);
        jlbl_barraEstado.setText("<html>  <font color=FF0000>ENTER: </font> Si                 <font color=FF0000>             ESC: </font> No  </html>");
        jlbl_barraEstado.setHorizontalAlignment( JTextField.CENTER );
        int nletras = pregunta.length();
        this.setSize((nletras * 6) + 80,155);
            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
            Dimension DilaogSize = this.getSize();
            if (DilaogSize.height > screenSize.height) {
                DilaogSize.height = screenSize.height;
            }
            if (DilaogSize.width > screenSize.width) {
                DilaogSize.width = screenSize.width;
            }
            this.setLocation( ( screenSize.width - DilaogSize.width ) / 2, ( screenSize.height - DilaogSize.height ) / 2 );            this.setDefaultLookAndFeelDecorated(true);
            //this.setUndecorated(true);
            this.getRootPane().setWindowDecorationStyle(JRootPane.QUESTION_DIALOG);
            jlbl_mensaje.requestFocus();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">                          
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        jlbl_barraEstado = new javax.swing.JLabel();
        jlbl_mensaje = new javax.swing.JLabel();
        jlbl_mensaje.setFocusTraversalKeysEnabled(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\NetBeansProyects\\TMSRecaudacion\\TMSRecaudacion-app-client\\src\\java\\tmsrecaudacion\\images\\pregunta.gif"));

        jlbl_barraEstado.setFont(new java.awt.Font("Tahoma", 1, 12));
        jlbl_barraEstado.setForeground(new java.awt.Color(153, 153, 153));
        jlbl_barraEstado.setText(" ENTER: Si                ESC: No");
        jlbl_barraEstado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jlbl_mensaje.setFont(new java.awt.Font("Arial", 1, 12));
        jlbl_mensaje.setText("sdfsdsdfsdfsdfsdfsdf");
        jlbl_mensaje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jlbl_mensajeKeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .add(14, 14, 14)
                .add(jlbl_mensaje, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                .add(424, 424, 424))
            .add(jlbl_barraEstado, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlbl_mensaje))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 59, Short.MAX_VALUE)
                .add(jlbl_barraEstado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        pack();
    }// </editor-fold>                           

    private void jlbl_mensajeKeyPressed(java.awt.event.KeyEvent evt) {                                        
      if(evt.getKeyCode() == evt.VK_ESCAPE)
      {
          respuestaSN = false;
          this.dispose();
      }
      if(evt.getKeyCode() == evt.VK_ENTER)
      {
          respuestaSN = true;
          this.dispose();
      }
      
    }                                       
    
    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jlbl_barraEstado;
    private javax.swing.JLabel jlbl_mensaje;
    // End of variables declaration                   
    
}    
    private KeyEvent eventoTeclado;

    public KeyEvent getEventoTeclado(){ return this.eventoTeclado; }
    
    public void setEventoTeclado(KeyEvent evento){ this.eventoTeclado=evento; }
}
